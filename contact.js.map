{"version":3,"file":"contact.js","mappings":"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","sources":["webpack://template-repo-web-dev/./src/styles/why-choose-us.css","webpack://template-repo-web-dev/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://template-repo-web-dev/./src/styles/default-reset.css","webpack://template-repo-web-dev/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://template-repo-web-dev/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://template-repo-web-dev/./src/styles/styles.css","webpack://template-repo-web-dev/./src/styles/util-styles.css","webpack://template-repo-web-dev/./src/scripts/header.js","webpack://template-repo-web-dev/./src/styles/footer.css","webpack://template-repo-web-dev/./node_modules/ol/ol.css","webpack://template-repo-web-dev/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://template-repo-web-dev/./src/styles/map-styles.css","webpack://template-repo-web-dev/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://template-repo-web-dev/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://template-repo-web-dev/./src/scripts/loader.js","webpack://template-repo-web-dev/./node_modules/css-loader/dist/runtime/api.js","webpack://template-repo-web-dev/./src/styles/text-underline-animation.css","webpack://template-repo-web-dev/./src/styles/contact-us-styles.css","webpack://template-repo-web-dev/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://template-repo-web-dev/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://template-repo-web-dev/./src/styles/header-styles.css","webpack://template-repo-web-dev/webpack/bootstrap","webpack://template-repo-web-dev/webpack/runtime/compat get default export","webpack://template-repo-web-dev/webpack/runtime/define property getters","webpack://template-repo-web-dev/webpack/runtime/global","webpack://template-repo-web-dev/webpack/runtime/hasOwnProperty shorthand","webpack://template-repo-web-dev/webpack/runtime/publicPath","webpack://template-repo-web-dev/webpack/runtime/jsonp chunk loading","webpack://template-repo-web-dev/webpack/runtime/nonce","webpack://template-repo-web-dev/./src/styles/default-reset.css?8b33","webpack://template-repo-web-dev/./src/styles/styles.css?e45b","webpack://template-repo-web-dev/./src/styles/header-styles.css?0b87","webpack://template-repo-web-dev/./src/styles/contact-us-styles.css?a504","webpack://template-repo-web-dev/./src/styles/text-underline-animation.css?a16f","webpack://template-repo-web-dev/./src/styles/why-choose-us.css?9f25","webpack://template-repo-web-dev/./src/styles/map-styles.css?704a","webpack://template-repo-web-dev/./src/styles/footer.css?7e92","webpack://template-repo-web-dev/./src/styles/util-styles.css?f60c","webpack://template-repo-web-dev/./node_modules/ol/ol.css?ee3c","webpack://template-repo-web-dev/./node_modules/ol/CollectionEventType.js","webpack://template-repo-web-dev/./node_modules/ol/ObjectEventType.js","webpack://template-repo-web-dev/./node_modules/ol/events/EventType.js","webpack://template-repo-web-dev/./node_modules/ol/Disposable.js","webpack://template-repo-web-dev/./node_modules/ol/array.js","webpack://template-repo-web-dev/./node_modules/ol/functions.js","webpack://template-repo-web-dev/./node_modules/ol/obj.js","webpack://template-repo-web-dev/./node_modules/ol/events/Event.js","webpack://template-repo-web-dev/./node_modules/ol/events/Target.js","webpack://template-repo-web-dev/./node_modules/ol/events.js","webpack://template-repo-web-dev/./node_modules/ol/Observable.js","webpack://template-repo-web-dev/./node_modules/ol/util.js","webpack://template-repo-web-dev/./node_modules/ol/Object.js","webpack://template-repo-web-dev/./node_modules/ol/Collection.js","webpack://template-repo-web-dev/./node_modules/ol/MapEvent.js","webpack://template-repo-web-dev/./node_modules/ol/MapBrowserEvent.js","webpack://template-repo-web-dev/./node_modules/ol/MapBrowserEventType.js","webpack://template-repo-web-dev/./node_modules/ol/has.js","webpack://template-repo-web-dev/./node_modules/ol/pointer/EventType.js","webpack://template-repo-web-dev/./node_modules/ol/MapBrowserEventHandler.js","webpack://template-repo-web-dev/./node_modules/ol/MapEventType.js","webpack://template-repo-web-dev/./node_modules/ol/MapProperty.js","webpack://template-repo-web-dev/./node_modules/ol/asserts.js","webpack://template-repo-web-dev/./node_modules/ol/structs/PriorityQueue.js","webpack://template-repo-web-dev/./node_modules/ol/TileQueue.js","webpack://template-repo-web-dev/./node_modules/ol/TileState.js","webpack://template-repo-web-dev/./node_modules/ol/ViewProperty.js","webpack://template-repo-web-dev/./node_modules/ol/math.js","webpack://template-repo-web-dev/./node_modules/ol/centerconstraint.js","webpack://template-repo-web-dev/./node_modules/ol/extent.js","webpack://template-repo-web-dev/./node_modules/ol/extent/Relationship.js","webpack://template-repo-web-dev/./node_modules/ol/coordinate.js","webpack://template-repo-web-dev/./node_modules/ol/easing.js","webpack://template-repo-web-dev/./node_modules/ol/console.js","webpack://template-repo-web-dev/./node_modules/ol/proj/Units.js","webpack://template-repo-web-dev/./node_modules/ol/proj/Projection.js","webpack://template-repo-web-dev/./node_modules/ol/proj/epsg3857.js","webpack://template-repo-web-dev/./node_modules/ol/proj/epsg4326.js","webpack://template-repo-web-dev/./node_modules/ol/proj/projections.js","webpack://template-repo-web-dev/./node_modules/ol/proj/transforms.js","webpack://template-repo-web-dev/./node_modules/ol/proj/utm.js","webpack://template-repo-web-dev/./node_modules/ol/sphere.js","webpack://template-repo-web-dev/./node_modules/ol/proj.js","webpack://template-repo-web-dev/./node_modules/ol/transform.js","webpack://template-repo-web-dev/./node_modules/ol/geom/flat/transform.js","webpack://template-repo-web-dev/./node_modules/ol/geom/Geometry.js","webpack://template-repo-web-dev/./node_modules/ol/geom/SimpleGeometry.js","webpack://template-repo-web-dev/./node_modules/ol/geom/flat/area.js","webpack://template-repo-web-dev/./node_modules/ol/geom/flat/closest.js","webpack://template-repo-web-dev/./node_modules/ol/geom/flat/deflate.js","webpack://template-repo-web-dev/./node_modules/ol/geom/flat/inflate.js","webpack://template-repo-web-dev/./node_modules/ol/geom/flat/simplify.js","webpack://template-repo-web-dev/./node_modules/ol/geom/LinearRing.js","webpack://template-repo-web-dev/./node_modules/ol/geom/Point.js","webpack://template-repo-web-dev/./node_modules/ol/geom/flat/contains.js","webpack://template-repo-web-dev/./node_modules/ol/geom/flat/interiorpoint.js","webpack://template-repo-web-dev/./node_modules/ol/geom/flat/intersectsextent.js","webpack://template-repo-web-dev/./node_modules/ol/geom/flat/segments.js","webpack://template-repo-web-dev/./node_modules/ol/geom/flat/reverse.js","webpack://template-repo-web-dev/./node_modules/ol/geom/flat/orient.js","webpack://template-repo-web-dev/./node_modules/ol/geom/Polygon.js","webpack://template-repo-web-dev/./node_modules/ol/resolutionconstraint.js","webpack://template-repo-web-dev/./node_modules/ol/rotationconstraint.js","webpack://template-repo-web-dev/./node_modules/ol/View.js","webpack://template-repo-web-dev/./node_modules/ol/tilegrid/common.js","webpack://template-repo-web-dev/./node_modules/ol/ViewHint.js","webpack://template-repo-web-dev/./node_modules/ol/css.js","webpack://template-repo-web-dev/./node_modules/ol/dom.js","webpack://template-repo-web-dev/./node_modules/ol/control/Control.js","webpack://template-repo-web-dev/./node_modules/ol/control/Attribution.js","webpack://template-repo-web-dev/./node_modules/ol/control/Rotate.js","webpack://template-repo-web-dev/./node_modules/ol/control/Zoom.js","webpack://template-repo-web-dev/./node_modules/ol/Kinetic.js","webpack://template-repo-web-dev/./node_modules/ol/interaction/Property.js","webpack://template-repo-web-dev/./node_modules/ol/interaction/Interaction.js","webpack://template-repo-web-dev/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://template-repo-web-dev/./node_modules/ol/events/condition.js","webpack://template-repo-web-dev/./node_modules/ol/interaction/Pointer.js","webpack://template-repo-web-dev/./node_modules/ol/interaction/DragPan.js","webpack://template-repo-web-dev/./node_modules/ol/interaction/DragRotate.js","webpack://template-repo-web-dev/./node_modules/ol/render/Box.js","webpack://template-repo-web-dev/./node_modules/ol/interaction/DragBox.js","webpack://template-repo-web-dev/./node_modules/ol/interaction/DragZoom.js","webpack://template-repo-web-dev/./node_modules/ol/events/Key.js","webpack://template-repo-web-dev/./node_modules/ol/interaction/KeyboardPan.js","webpack://template-repo-web-dev/./node_modules/ol/interaction/KeyboardZoom.js","webpack://template-repo-web-dev/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://template-repo-web-dev/./node_modules/ol/interaction/PinchRotate.js","webpack://template-repo-web-dev/./node_modules/ol/interaction/PinchZoom.js","webpack://template-repo-web-dev/./node_modules/ol/layer/Property.js","webpack://template-repo-web-dev/./node_modules/ol/layer/Base.js","webpack://template-repo-web-dev/./node_modules/ol/layer/Group.js","webpack://template-repo-web-dev/./node_modules/ol/render/EventType.js","webpack://template-repo-web-dev/./node_modules/ol/layer/Layer.js","webpack://template-repo-web-dev/./node_modules/quickselect/index.js","webpack://template-repo-web-dev/./node_modules/rbush/index.js","webpack://template-repo-web-dev/./node_modules/ol/color.js","webpack://template-repo-web-dev/./node_modules/ol/size.js","webpack://template-repo-web-dev/./node_modules/ol/expr/expression.js","webpack://template-repo-web-dev/./node_modules/ol/expr/cpu.js","webpack://template-repo-web-dev/./node_modules/ol/style/IconImageCache.js","webpack://template-repo-web-dev/./node_modules/ol/ImageState.js","webpack://template-repo-web-dev/./node_modules/ol/style/IconImage.js","webpack://template-repo-web-dev/./node_modules/ol/Image.js","webpack://template-repo-web-dev/./node_modules/ol/colorlike.js","webpack://template-repo-web-dev/./node_modules/ol/render/canvas.js","webpack://template-repo-web-dev/./node_modules/ol/style/Image.js","webpack://template-repo-web-dev/./node_modules/ol/style/RegularShape.js","webpack://template-repo-web-dev/./node_modules/ol/style/Circle.js","webpack://template-repo-web-dev/./node_modules/ol/style/Fill.js","webpack://template-repo-web-dev/./node_modules/ol/style/Icon.js","webpack://template-repo-web-dev/./node_modules/ol/style/Stroke.js","webpack://template-repo-web-dev/./node_modules/ol/style/Style.js","webpack://template-repo-web-dev/./node_modules/ol/style/Text.js","webpack://template-repo-web-dev/./node_modules/ol/render/canvas/style.js","webpack://template-repo-web-dev/./node_modules/ol/layer/BaseVector.js","webpack://template-repo-web-dev/./node_modules/ol/render/Event.js","webpack://template-repo-web-dev/./node_modules/ol/renderer/Map.js","webpack://template-repo-web-dev/./node_modules/ol/renderer/Composite.js","webpack://template-repo-web-dev/./node_modules/ol/Map.js","webpack://template-repo-web-dev/./node_modules/ol/control/defaults.js","webpack://template-repo-web-dev/./node_modules/ol/interaction/defaults.js","webpack://template-repo-web-dev/./node_modules/ol/Tile.js","webpack://template-repo-web-dev/./node_modules/ol/DataTile.js","webpack://template-repo-web-dev/./node_modules/ol/ImageTile.js","webpack://template-repo-web-dev/./node_modules/ol/TileRange.js","webpack://template-repo-web-dev/./node_modules/ol/reproj.js","webpack://template-repo-web-dev/./node_modules/ol/reproj/Triangulation.js","webpack://template-repo-web-dev/./node_modules/ol/reproj/Tile.js","webpack://template-repo-web-dev/./node_modules/ol/reproj/common.js","webpack://template-repo-web-dev/./node_modules/ol/structs/LRUCache.js","webpack://template-repo-web-dev/./node_modules/ol/tilecoord.js","webpack://template-repo-web-dev/./node_modules/ol/render/canvas/ZIndexContext.js","webpack://template-repo-web-dev/./node_modules/ol/renderer/Layer.js","webpack://template-repo-web-dev/./node_modules/ol/renderer/canvas/Layer.js","webpack://template-repo-web-dev/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://template-repo-web-dev/./node_modules/ol/layer/TileProperty.js","webpack://template-repo-web-dev/./node_modules/ol/layer/BaseTile.js","webpack://template-repo-web-dev/./node_modules/ol/layer/Tile.js","webpack://template-repo-web-dev/./node_modules/ol/tilegrid/TileGrid.js","webpack://template-repo-web-dev/./node_modules/ol/tilegrid.js","webpack://template-repo-web-dev/./node_modules/ol/uri.js","webpack://template-repo-web-dev/./node_modules/ol/tileurlfunction.js","webpack://template-repo-web-dev/./node_modules/ol/source/Source.js","webpack://template-repo-web-dev/./node_modules/ol/source/Tile.js","webpack://template-repo-web-dev/./node_modules/ol/source/UrlTile.js","webpack://template-repo-web-dev/./node_modules/ol/source/TileEventType.js","webpack://template-repo-web-dev/./node_modules/ol/source/TileImage.js","webpack://template-repo-web-dev/./node_modules/ol/source/XYZ.js","webpack://template-repo-web-dev/./node_modules/ol/source/OSM.js","webpack://template-repo-web-dev/./node_modules/ol/Feature.js","webpack://template-repo-web-dev/./node_modules/ol/render/VectorContext.js","webpack://template-repo-web-dev/./node_modules/ol/render/canvas/Instruction.js","webpack://template-repo-web-dev/./node_modules/ol/render/canvas/Builder.js","webpack://template-repo-web-dev/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://template-repo-web-dev/./node_modules/ol/geom/flat/linechunk.js","webpack://template-repo-web-dev/./node_modules/ol/geom/flat/straightchunk.js","webpack://template-repo-web-dev/./node_modules/ol/render/canvas/TextBuilder.js","webpack://template-repo-web-dev/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://template-repo-web-dev/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://template-repo-web-dev/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://template-repo-web-dev/./node_modules/ol/geom/flat/length.js","webpack://template-repo-web-dev/./node_modules/ol/geom/flat/textpath.js","webpack://template-repo-web-dev/./node_modules/ol/render/canvas/Executor.js","webpack://template-repo-web-dev/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://template-repo-web-dev/./node_modules/ol/render/canvas/Immediate.js","webpack://template-repo-web-dev/./node_modules/ol/render/canvas/hitdetect.js","webpack://template-repo-web-dev/./node_modules/ol/renderer/vector.js","webpack://template-repo-web-dev/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://template-repo-web-dev/./node_modules/ol/layer/Vector.js","webpack://template-repo-web-dev/./node_modules/ol/featureloader.js","webpack://template-repo-web-dev/./node_modules/ol/loadingstrategy.js","webpack://template-repo-web-dev/./node_modules/ol/geom/flat/interpolate.js","webpack://template-repo-web-dev/./node_modules/ol/render/Feature.js","webpack://template-repo-web-dev/./node_modules/ol/geom/flat/center.js","webpack://template-repo-web-dev/./node_modules/ol/structs/RBush.js","webpack://template-repo-web-dev/./node_modules/ol/source/VectorEventType.js","webpack://template-repo-web-dev/./node_modules/ol/source/Vector.js","webpack://template-repo-web-dev/./node_modules/ol/Overlay.js","webpack://template-repo-web-dev/./src/scripts/map.js","webpack://template-repo-web-dev/./src/contact.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* #region Why Choose Us Styling */\r\n.why-choose-us {\r\n    background-color: #f6f3ef;\r\n    padding: 4rem 0;\r\n}\r\n\r\n.why-choose-us-cards-container {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\r\n    gap: 2rem;\r\n\r\n    justify-content: center;\r\n    justify-items: stretch;\r\n\r\n    align-items: stretch;\r\n}\r\n\r\n.why-choose-us-cards-container>.card {\r\n\r\n    /* Compatibility */\r\n    border: 1px solid rgba(0, 0, 0, 0.2);\r\n    border-radius: 0.75rem;\r\n    overflow: hidden;\r\n    background-color: white;\r\n\r\n    transition: transform 0.3s, box-shadow 0.3s;\r\n    /* Compatibility */\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    padding: 2.5rem 2.5rem;\r\n    height: auto;\r\n}\r\n\r\n.why-choose-us-cards-container>.card:hover {\r\n    transform: translateY(-0.5%);\r\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\r\n\r\n}\r\n\r\n.why-choose-us-card-icon>img {\r\n    object-fit: contain;\r\n    object-position: center;\r\n\r\n    width: 2.5rem;\r\n}\r\n\r\n.why-choose-us-card-text {\r\n    padding-top: 1rem;\r\n}\r\n\r\n.why-choose-us-card-text>h3 {\r\n    font-size: 1.25rem;\r\n    margin-bottom: 1rem;\r\n    color: #34402e;\r\n    text-align: center;\r\n}\r\n\r\n.why-choose-us-card-text>h4 {\r\n    text-align: center;\r\n    margin-bottom: 1rem;\r\n    margin-top: -0.75rem;\r\n\r\n    color: hsl(100, 0%, 37%);\r\n\r\n}\r\n\r\n\r\n.why-choose-us-card-text>p {\r\n    color: #4b5563;\r\n    text-align: center;\r\n}\r\n\r\n/* #endregion Why Choose Us Styling */\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/why-choose-us.css\"],\"names\":[],\"mappings\":\"AAAA,kCAAkC;AAClC;IACI,yBAAyB;IACzB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,2DAA2D;IAC3D,SAAS;;IAET,uBAAuB;IACvB,sBAAsB;;IAEtB,oBAAoB;AACxB;;AAEA;;IAEI,kBAAkB;IAClB,oCAAoC;IACpC,sBAAsB;IACtB,gBAAgB;IAChB,uBAAuB;;IAEvB,2CAA2C;IAC3C,kBAAkB;;IAElB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;;IAEnB,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,4BAA4B;IAC5B,2CAA2C;;AAE/C;;AAEA;IACI,mBAAmB;IACnB,uBAAuB;;IAEvB,aAAa;AACjB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;IACnB,cAAc;IACd,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;IACnB,oBAAoB;;IAEpB,wBAAwB;;AAE5B;;;AAGA;IACI,cAAc;IACd,kBAAkB;AACtB;;AAEA,qCAAqC\",\"sourcesContent\":[\"/* #region Why Choose Us Styling */\\r\\n.why-choose-us {\\r\\n    background-color: #f6f3ef;\\r\\n    padding: 4rem 0;\\r\\n}\\r\\n\\r\\n.why-choose-us-cards-container {\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\\r\\n    gap: 2rem;\\r\\n\\r\\n    justify-content: center;\\r\\n    justify-items: stretch;\\r\\n\\r\\n    align-items: stretch;\\r\\n}\\r\\n\\r\\n.why-choose-us-cards-container>.card {\\r\\n\\r\\n    /* Compatibility */\\r\\n    border: 1px solid rgba(0, 0, 0, 0.2);\\r\\n    border-radius: 0.75rem;\\r\\n    overflow: hidden;\\r\\n    background-color: white;\\r\\n\\r\\n    transition: transform 0.3s, box-shadow 0.3s;\\r\\n    /* Compatibility */\\r\\n\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n\\r\\n    padding: 2.5rem 2.5rem;\\r\\n    height: auto;\\r\\n}\\r\\n\\r\\n.why-choose-us-cards-container>.card:hover {\\r\\n    transform: translateY(-0.5%);\\r\\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\\r\\n\\r\\n}\\r\\n\\r\\n.why-choose-us-card-icon>img {\\r\\n    object-fit: contain;\\r\\n    object-position: center;\\r\\n\\r\\n    width: 2.5rem;\\r\\n}\\r\\n\\r\\n.why-choose-us-card-text {\\r\\n    padding-top: 1rem;\\r\\n}\\r\\n\\r\\n.why-choose-us-card-text>h3 {\\r\\n    font-size: 1.25rem;\\r\\n    margin-bottom: 1rem;\\r\\n    color: #34402e;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.why-choose-us-card-text>h4 {\\r\\n    text-align: center;\\r\\n    margin-bottom: 1rem;\\r\\n    margin-top: -0.75rem;\\r\\n\\r\\n    color: hsl(100, 0%, 37%);\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n.why-choose-us-card-text>p {\\r\\n    color: #4b5563;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n/* #endregion Why Choose Us Styling */\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* 1. Use a more-intuitive box-sizing model */\r\n*, *::before, *::after {\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* 2. Remove default margin */\r\n* {\r\n  margin: 0;\r\n}\r\n\r\nbody {\r\n  /* 3. Add accessible line-height */\r\n  line-height: 1.5;\r\n  /* 4. Improve text rendering */\r\n  -webkit-font-smoothing: antialiased;\r\n}\r\n\r\n/* 5. Improve media defaults */\r\nimg, picture, video, canvas, svg {\r\n  display: block;\r\n  max-width: 100%;\r\n}\r\n\r\n/* 6. Inherit fonts for form controls */\r\ninput, button, textarea, select {\r\n  font: inherit;\r\n}\r\n\r\n/* 7. Avoid text overflows */\r\np, h1, h2, h3, h4, h5, h6 {\r\n  overflow-wrap: break-word;\r\n}\r\n\r\n/* 8. Improve line wrapping */\r\np {\r\n  text-wrap: pretty;\r\n}\r\nh1, h2, h3, h4, h5, h6 {\r\n  text-wrap: balance;\r\n}\r\n\r\n/*\r\n  9. Create a root stacking context\r\n*/\r\n#root, #__next {\r\n  isolation: isolate;\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/default-reset.css\"],\"names\":[],\"mappings\":\"AAAA,6CAA6C;AAC7C;EACE,sBAAsB;AACxB;;AAEA,6BAA6B;AAC7B;EACE,SAAS;AACX;;AAEA;EACE,kCAAkC;EAClC,gBAAgB;EAChB,8BAA8B;EAC9B,mCAAmC;AACrC;;AAEA,8BAA8B;AAC9B;EACE,cAAc;EACd,eAAe;AACjB;;AAEA,uCAAuC;AACvC;EACE,aAAa;AACf;;AAEA,4BAA4B;AAC5B;EACE,yBAAyB;AAC3B;;AAEA,6BAA6B;AAC7B;EACE,iBAAiB;AACnB;AACA;EACE,kBAAkB;AACpB;;AAEA;;CAEC;AACD;EACE,kBAAkB;AACpB\",\"sourcesContent\":[\"/* 1. Use a more-intuitive box-sizing model */\\r\\n*, *::before, *::after {\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n/* 2. Remove default margin */\\r\\n* {\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  /* 3. Add accessible line-height */\\r\\n  line-height: 1.5;\\r\\n  /* 4. Improve text rendering */\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n}\\r\\n\\r\\n/* 5. Improve media defaults */\\r\\nimg, picture, video, canvas, svg {\\r\\n  display: block;\\r\\n  max-width: 100%;\\r\\n}\\r\\n\\r\\n/* 6. Inherit fonts for form controls */\\r\\ninput, button, textarea, select {\\r\\n  font: inherit;\\r\\n}\\r\\n\\r\\n/* 7. Avoid text overflows */\\r\\np, h1, h2, h3, h4, h5, h6 {\\r\\n  overflow-wrap: break-word;\\r\\n}\\r\\n\\r\\n/* 8. Improve line wrapping */\\r\\np {\\r\\n  text-wrap: pretty;\\r\\n}\\r\\nh1, h2, h3, h4, h5, h6 {\\r\\n  text-wrap: balance;\\r\\n}\\r\\n\\r\\n/*\\r\\n  9. Create a root stacking context\\r\\n*/\\r\\n#root, #__next {\\r\\n  isolation: isolate;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100..900;1,100..900&family=PT+Serif:ital,wght@0,400;0,700;1,400;1,700&display=swap);\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\r\n    /* Header Vars */\r\n    --transparent-bg-font-color: white;\r\n    --light-mode-bg-font-color: black;\r\n    --hover-highlight-color: #008cff33;\r\n    --light-mode-bg-color-primary: rgba(255, 255, 255, 0.90);\r\n\r\n    --scroll-bar-width: 7px;\r\n\r\n    scroll-behavior: smooth;\r\n}\r\n\r\nbody {\r\n    min-height: 100vh;\r\n    font-family: \"Noto Sans\", sans-serif;\r\n    font-optical-sizing: auto;\r\n    position: relative;\r\n    z-index: 0;\r\n\r\n    background-color: #fcfbf8;\r\n}\r\n\r\n/* #region Scroll bar styiling */\r\n::-webkit-scrollbar {\r\n    width: var(--scroll-bar-width);\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n    background-color: white;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n    background-color: #869faf;\r\n    border-radius: 10px;\r\n    /* border: 1px solid transparent; */\r\n    background-clip: content-box;\r\n}\r\n\r\n::-webkit-scrollbar-thumb:hover {\r\n    background-color: #929292;\r\n}\r\n\r\n.content {\r\n    margin-top: 20rem;\r\n}\r\n\r\n/* #endregion Scroll bar styiling */\r\n\r\n/* #region Skeleton Loading */\r\n\r\n.skeleton {\r\n    /* opacity: 0.7; */\r\n    animation: skeleton-loading 1s linear infinite alternate;\r\n    width: 100%;\r\n}\r\n\r\n@keyframes skeleton-loading {\r\n    0% {\r\n        background-color: hsl(200, 20%, 70%);\r\n    }\r\n\r\n    100% {\r\n        background-color: hsl(200, 20%, 95%);\r\n    }\r\n}\r\n\r\n.skeleton-text,\r\n.skeleton-text:first-child {\r\n    width: 100%;\r\n    height: 0.8rem;\r\n    border-radius: 0.5rem;\r\n    margin-bottom: 0.5rem;\r\n}\r\n\r\n.skeleton-text:last-child {\r\n    margin-bottom: 0;\r\n    width: 75%;\r\n}\r\n\r\n/* #endregion Skeleton Loading */\r\n\r\n/* #region general section styling */\r\n\r\n.general-section {\r\n    padding-top: 4rem;\r\n    background-color: inherit;\r\n}\r\n\r\n\r\n.general-section-heading {\r\n    text-align: center;\r\n    width: 90%;\r\n    max-width: 1400px;\r\n    margin: auto;\r\n    margin-bottom: 3rem;\r\n}\r\n\r\n.general-section-heading h2 {\r\n    font-size: 2.25rem;\r\n    font-family: \"PT Serif\", serif;\r\n\r\n    line-height: 1.25;\r\n}\r\n\r\n.general-section-subcontainer {\r\n    padding: 0 1rem;\r\n    margin: auto;\r\n    max-width: 1400px;\r\n}\r\n\r\n.general-section.misc-hero {\r\n    padding: 0 0;\r\n    min-height: 60lvh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #0f1019;\r\n    color: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n.misc-hero .general-section-heading {\r\n    margin: 0;\r\n    margin-top: 2rem;\r\n}\r\n\r\n.misc-hero .general-section-heading h2 {\r\n    font-size: clamp(2.75rem, 5vw, 3rem);\r\n}\r\n\r\n/* #endregion general section styling */\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/styles.css\"],\"names\":[],\"mappings\":\"AAEA;IACI,gBAAgB;IAChB,kCAAkC;IAClC,iCAAiC;IACjC,kCAAkC;IAClC,wDAAwD;;IAExD,uBAAuB;;IAEvB,uBAAuB;AAC3B;;AAEA;IACI,iBAAiB;IACjB,oCAAoC;IACpC,yBAAyB;IACzB,kBAAkB;IAClB,UAAU;;IAEV,yBAAyB;AAC7B;;AAEA,gCAAgC;AAChC;IACI,8BAA8B;AAClC;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,yBAAyB;IACzB,mBAAmB;IACnB,mCAAmC;IACnC,4BAA4B;AAChC;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,iBAAiB;AACrB;;AAEA,mCAAmC;;AAEnC,6BAA6B;;AAE7B;IACI,kBAAkB;IAClB,wDAAwD;IACxD,WAAW;AACf;;AAEA;IACI;QACI,oCAAoC;IACxC;;IAEA;QACI,oCAAoC;IACxC;AACJ;;AAEA;;IAEI,WAAW;IACX,cAAc;IACd,qBAAqB;IACrB,qBAAqB;AACzB;;AAEA;IACI,gBAAgB;IAChB,UAAU;AACd;;AAEA,gCAAgC;;AAEhC,oCAAoC;;AAEpC;IACI,iBAAiB;IACjB,yBAAyB;AAC7B;;;AAGA;IACI,kBAAkB;IAClB,UAAU;IACV,iBAAiB;IACjB,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,8BAA8B;;IAE9B,iBAAiB;AACrB;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,yBAAyB;IACzB,+BAA+B;AACnC;;AAEA;IACI,SAAS;IACT,gBAAgB;AACpB;;AAEA;IACI,oCAAoC;AACxC;;AAEA,uCAAuC\",\"sourcesContent\":[\"@import url('https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100..900;1,100..900&family=PT+Serif:ital,wght@0,400;0,700;1,400;1,700&display=swap');\\r\\n\\r\\n:root {\\r\\n    /* Header Vars */\\r\\n    --transparent-bg-font-color: white;\\r\\n    --light-mode-bg-font-color: black;\\r\\n    --hover-highlight-color: #008cff33;\\r\\n    --light-mode-bg-color-primary: rgba(255, 255, 255, 0.90);\\r\\n\\r\\n    --scroll-bar-width: 7px;\\r\\n\\r\\n    scroll-behavior: smooth;\\r\\n}\\r\\n\\r\\nbody {\\r\\n    min-height: 100vh;\\r\\n    font-family: \\\"Noto Sans\\\", sans-serif;\\r\\n    font-optical-sizing: auto;\\r\\n    position: relative;\\r\\n    z-index: 0;\\r\\n\\r\\n    background-color: #fcfbf8;\\r\\n}\\r\\n\\r\\n/* #region Scroll bar styiling */\\r\\n::-webkit-scrollbar {\\r\\n    width: var(--scroll-bar-width);\\r\\n}\\r\\n\\r\\n::-webkit-scrollbar-track {\\r\\n    background-color: white;\\r\\n}\\r\\n\\r\\n::-webkit-scrollbar-thumb {\\r\\n    background-color: #869faf;\\r\\n    border-radius: 10px;\\r\\n    /* border: 1px solid transparent; */\\r\\n    background-clip: content-box;\\r\\n}\\r\\n\\r\\n::-webkit-scrollbar-thumb:hover {\\r\\n    background-color: #929292;\\r\\n}\\r\\n\\r\\n.content {\\r\\n    margin-top: 20rem;\\r\\n}\\r\\n\\r\\n/* #endregion Scroll bar styiling */\\r\\n\\r\\n/* #region Skeleton Loading */\\r\\n\\r\\n.skeleton {\\r\\n    /* opacity: 0.7; */\\r\\n    animation: skeleton-loading 1s linear infinite alternate;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n@keyframes skeleton-loading {\\r\\n    0% {\\r\\n        background-color: hsl(200, 20%, 70%);\\r\\n    }\\r\\n\\r\\n    100% {\\r\\n        background-color: hsl(200, 20%, 95%);\\r\\n    }\\r\\n}\\r\\n\\r\\n.skeleton-text,\\r\\n.skeleton-text:first-child {\\r\\n    width: 100%;\\r\\n    height: 0.8rem;\\r\\n    border-radius: 0.5rem;\\r\\n    margin-bottom: 0.5rem;\\r\\n}\\r\\n\\r\\n.skeleton-text:last-child {\\r\\n    margin-bottom: 0;\\r\\n    width: 75%;\\r\\n}\\r\\n\\r\\n/* #endregion Skeleton Loading */\\r\\n\\r\\n/* #region general section styling */\\r\\n\\r\\n.general-section {\\r\\n    padding-top: 4rem;\\r\\n    background-color: inherit;\\r\\n}\\r\\n\\r\\n\\r\\n.general-section-heading {\\r\\n    text-align: center;\\r\\n    width: 90%;\\r\\n    max-width: 1400px;\\r\\n    margin: auto;\\r\\n    margin-bottom: 3rem;\\r\\n}\\r\\n\\r\\n.general-section-heading h2 {\\r\\n    font-size: 2.25rem;\\r\\n    font-family: \\\"PT Serif\\\", serif;\\r\\n\\r\\n    line-height: 1.25;\\r\\n}\\r\\n\\r\\n.general-section-subcontainer {\\r\\n    padding: 0 1rem;\\r\\n    margin: auto;\\r\\n    max-width: 1400px;\\r\\n}\\r\\n\\r\\n.general-section.misc-hero {\\r\\n    padding: 0 0;\\r\\n    min-height: 60lvh;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    background-color: #0f1019;\\r\\n    color: rgba(255, 255, 255, 0.9);\\r\\n}\\r\\n\\r\\n.misc-hero .general-section-heading {\\r\\n    margin: 0;\\r\\n    margin-top: 2rem;\\r\\n}\\r\\n\\r\\n.misc-hero .general-section-heading h2 {\\r\\n    font-size: clamp(2.75rem, 5vw, 3rem);\\r\\n}\\r\\n\\r\\n/* #endregion general section styling */\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.hidden {\r\n    overflow: hidden;\r\n    height: 0;\r\n    opacity: 0;\r\n    padding: 0;\r\n\r\n    /* display: none; */\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/util-styles.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,gBAAgB;IAChB,SAAS;IACT,UAAU;IACV,UAAU;;IAEV,mBAAmB;AACvB\",\"sourcesContent\":[\".hidden {\\r\\n    overflow: hidden;\\r\\n    height: 0;\\r\\n    opacity: 0;\\r\\n    padding: 0;\\r\\n\\r\\n    /* display: none; */\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","function addHeaderTransparency() {\r\n  if (\r\n    document\r\n      .querySelector(\".header-extended-menu-container\")\r\n      .classList.contains(\"never-transparent\")\r\n  ) {\r\n    return;\r\n  }\r\n  document\r\n    .querySelector(\".header-extended-menu-container\")\r\n    .classList.add(\"transparent-container\");\r\n}\r\n\r\nfunction removeHeaderTransparency() {\r\n  if (\r\n    document\r\n      .querySelector(\".header-extended-menu-container\")\r\n      .classList.contains(\"never-transparent\")\r\n  ) {\r\n    return;\r\n  }\r\n  document\r\n    .querySelector(\".header-extended-menu-container\")\r\n    .classList.remove(\"transparent-container\");\r\n}\r\n\r\nfunction toggleExtendedNavMenu() {\r\n  const extendedMenu = document.querySelector(\".extended-menu\");\r\n  extendedMenu.classList.toggle(\"expanded\");\r\n\r\n  if (extendedMenu.classList.contains(\"expanded\")) {\r\n    removeHeaderTransparency();\r\n  } else if (window.scrollY < 100) {\r\n    addHeaderTransparency();\r\n  }\r\n}\r\n\r\nfunction toggleHamburgerCross() {\r\n  document.querySelector(\".hamburger\").classList.toggle(\"cross\");\r\n}\r\n\r\nconst headerHamburger = document.querySelector(\".hamburger-menu\");\r\n\r\nheaderHamburger.addEventListener(\"click\", () => {\r\n  toggleExtendedNavMenu();\r\n  toggleHamburgerCross();\r\n});\r\n\r\ndocument.addEventListener(`scroll`, () => {\r\n  const extendedMenu = document.querySelector(\".extended-menu\");\r\n  if (window.scrollY < 100 && !extendedMenu.classList.contains(\"expanded\")) {\r\n    addHeaderTransparency();\r\n  } else {\r\n    removeHeaderTransparency();\r\n  }\r\n});\r\n// toggleExtendedNavMenu();\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.footer {\r\n    /* margin-top: 1rem; */\r\n    background-color: #0f1019;\r\n    color: #989ba8;\r\n    /* padding: 0 1rem; */\r\n    padding: 4rem 1rem;\r\n\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\r\n    gap: 4rem;\r\n    /* display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 4rem; */\r\n}\r\n\r\n.footer-heading {\r\n    text-align: left;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2rem;\r\n    /* align-items: center; */\r\n    margin: auto;\r\n}\r\n\r\n.footer-heading-logo-text {\r\n    display: flex;\r\n    gap: 2rem;\r\n\r\n    flex: 1;\r\n    align-items: center;\r\n}\r\n\r\n.footer-heading img {\r\n    object-fit: contain;\r\n    object-position: center;\r\n\r\n    width: 5rem;\r\n}\r\n\r\n.footer-heading-text {\r\n    flex: 1;\r\n}\r\n\r\n.footer-heading h2 {\r\n    font-family: \"Noto Sans\", sans-serif;\r\n    font-size: 2.25rem;\r\n}\r\n\r\n\r\n.creator-credit {\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.footer-container {\r\n    width: 100%;\r\n    flex: 1;\r\n    padding: 0;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: 2rem;\r\n\r\n    margin: auto;\r\n\r\n    /* grid-column: 2; */\r\n}\r\n\r\n.footer-container>div {\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.footer h4 {\r\n    font-size: 1.1rem;\r\n    /* font-family: \"PT Serif\", serif; */\r\n    margin-bottom: 0.75rem;\r\n}\r\n\r\n.footer a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/footer.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,sBAAsB;IACtB,yBAAyB;IACzB,cAAc;IACd,qBAAqB;IACrB,kBAAkB;;IAElB,aAAa;IACb,2DAA2D;IAC3D,SAAS;IACT;;gBAEY;AAChB;;AAEA;IACI,gBAAgB;;IAEhB,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,SAAS;;IAET,OAAO;IACP,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;IACnB,uBAAuB;;IAEvB,WAAW;AACf;;AAEA;IACI,OAAO;AACX;;AAEA;IACI,oCAAoC;IACpC,kBAAkB;AACtB;;;AAGA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,WAAW;IACX,OAAO;IACP,UAAU;IACV,aAAa;IACb,8BAA8B;IAC9B,SAAS;;IAET,YAAY;;IAEZ,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,iBAAiB;IACjB,oCAAoC;IACpC,sBAAsB;AAC1B;;AAEA;IACI,qBAAqB;IACrB,cAAc;AAClB\",\"sourcesContent\":[\".footer {\\r\\n    /* margin-top: 1rem; */\\r\\n    background-color: #0f1019;\\r\\n    color: #989ba8;\\r\\n    /* padding: 0 1rem; */\\r\\n    padding: 4rem 1rem;\\r\\n\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\\r\\n    gap: 4rem;\\r\\n    /* display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    gap: 4rem; */\\r\\n}\\r\\n\\r\\n.footer-heading {\\r\\n    text-align: left;\\r\\n\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    gap: 2rem;\\r\\n    /* align-items: center; */\\r\\n    margin: auto;\\r\\n}\\r\\n\\r\\n.footer-heading-logo-text {\\r\\n    display: flex;\\r\\n    gap: 2rem;\\r\\n\\r\\n    flex: 1;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.footer-heading img {\\r\\n    object-fit: contain;\\r\\n    object-position: center;\\r\\n\\r\\n    width: 5rem;\\r\\n}\\r\\n\\r\\n.footer-heading-text {\\r\\n    flex: 1;\\r\\n}\\r\\n\\r\\n.footer-heading h2 {\\r\\n    font-family: \\\"Noto Sans\\\", sans-serif;\\r\\n    font-size: 2.25rem;\\r\\n}\\r\\n\\r\\n\\r\\n.creator-credit {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.footer-container {\\r\\n    width: 100%;\\r\\n    flex: 1;\\r\\n    padding: 0;\\r\\n    display: grid;\\r\\n    grid-template-columns: 1fr 1fr;\\r\\n    gap: 2rem;\\r\\n\\r\\n    margin: auto;\\r\\n\\r\\n    /* grid-column: 2; */\\r\\n}\\r\\n\\r\\n.footer-container>div {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.footer h4 {\\r\\n    font-size: 1.1rem;\\r\\n    /* font-family: \\\"PT Serif\\\", serif; */\\r\\n    margin-bottom: 0.75rem;\\r\\n}\\r\\n\\r\\n.footer a {\\r\\n    text-decoration: none;\\r\\n    color: inherit;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root,\n:host {\n  --ol-background-color: white;\n  --ol-accent-background-color: #F5F5F5;\n  --ol-subtle-background-color: rgba(128, 128, 128, 0.25);\n  --ol-partial-background-color: rgba(255, 255, 255, 0.75);\n  --ol-foreground-color: #333333;\n  --ol-subtle-foreground-color: #666666;\n  --ol-brand-color: #00AAFF;\n}\n\n.ol-box {\n  box-sizing: border-box;\n  border-radius: 2px;\n  border: 1.5px solid var(--ol-background-color);\n  background-color: var(--ol-partial-background-color);\n}\n\n.ol-mouse-position {\n  top: 8px;\n  right: 8px;\n  position: absolute;\n}\n\n.ol-scale-line {\n  background: var(--ol-partial-background-color);\n  border-radius: 4px;\n  bottom: 8px;\n  left: 8px;\n  padding: 2px;\n  position: absolute;\n}\n\n.ol-scale-line-inner {\n  border: 1px solid var(--ol-subtle-foreground-color);\n  border-top: none;\n  color: var(--ol-foreground-color);\n  font-size: 10px;\n  text-align: center;\n  margin: 1px;\n  will-change: contents, width;\n  transition: all 0.25s;\n}\n\n.ol-scale-bar {\n  position: absolute;\n  bottom: 8px;\n  left: 8px;\n}\n\n.ol-scale-bar-inner {\n  display: flex;\n}\n\n.ol-scale-step-marker {\n  width: 1px;\n  height: 15px;\n  background-color: var(--ol-foreground-color);\n  float: right;\n  z-index: 10;\n}\n\n.ol-scale-step-text {\n  position: absolute;\n  bottom: -5px;\n  font-size: 10px;\n  z-index: 11;\n  color: var(--ol-foreground-color);\n  text-shadow: -1.5px 0 var(--ol-partial-background-color), 0 1.5px var(--ol-partial-background-color), 1.5px 0 var(--ol-partial-background-color), 0 -1.5px var(--ol-partial-background-color);\n}\n\n.ol-scale-text {\n  position: absolute;\n  font-size: 12px;\n  text-align: center;\n  bottom: 25px;\n  color: var(--ol-foreground-color);\n  text-shadow: -1.5px 0 var(--ol-partial-background-color), 0 1.5px var(--ol-partial-background-color), 1.5px 0 var(--ol-partial-background-color), 0 -1.5px var(--ol-partial-background-color);\n}\n\n.ol-scale-singlebar {\n  position: relative;\n  height: 10px;\n  z-index: 9;\n  box-sizing: border-box;\n  border: 1px solid var(--ol-foreground-color);\n}\n\n.ol-scale-singlebar-even {\n  background-color: var(--ol-subtle-foreground-color);\n}\n\n.ol-scale-singlebar-odd {\n  background-color: var(--ol-background-color);\n}\n\n.ol-unsupported {\n  display: none;\n}\n\n.ol-viewport,\n.ol-unselectable {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  user-select: none;\n  -webkit-tap-highlight-color: transparent;\n}\n\n.ol-viewport canvas {\n  all: unset;\n  overflow: hidden;\n}\n\n.ol-viewport {\n  touch-action: pan-x pan-y;\n}\n\n.ol-selectable {\n  -webkit-touch-callout: default;\n  -webkit-user-select: text;\n  -moz-user-select: text;\n  user-select: text;\n}\n\n.ol-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: -moz-grabbing;\n  cursor: grabbing;\n}\n\n.ol-grab {\n  cursor: move;\n  cursor: -webkit-grab;\n  cursor: -moz-grab;\n  cursor: grab;\n}\n\n.ol-control {\n  position: absolute;\n  background-color: var(--ol-subtle-background-color);\n  border-radius: 4px;\n}\n\n.ol-zoom {\n  top: .5em;\n  left: .5em;\n}\n\n.ol-rotate {\n  top: .5em;\n  right: .5em;\n  transition: opacity .25s linear, visibility 0s linear;\n}\n\n.ol-rotate.ol-hidden {\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity .25s linear, visibility 0s linear .25s;\n}\n\n.ol-zoom-extent {\n  top: 4.643em;\n  left: .5em;\n}\n\n.ol-full-screen {\n  right: .5em;\n  top: .5em;\n}\n\n.ol-control button {\n  display: block;\n  margin: 1px;\n  padding: 0;\n  color: var(--ol-subtle-foreground-color);\n  font-weight: bold;\n  text-decoration: none;\n  font-size: inherit;\n  text-align: center;\n  height: 1.375em;\n  width: 1.375em;\n  line-height: .4em;\n  background-color: var(--ol-background-color);\n  border: none;\n  border-radius: 2px;\n}\n\n.ol-control button::-moz-focus-inner {\n  border: none;\n  padding: 0;\n}\n\n.ol-zoom-extent button {\n  line-height: 1.4em;\n}\n\n.ol-compass {\n  display: block;\n  font-weight: normal;\n  will-change: transform;\n}\n\n.ol-touch .ol-control button {\n  font-size: 1.5em;\n}\n\n.ol-touch .ol-zoom-extent {\n  top: 5.5em;\n}\n\n.ol-control button:hover,\n.ol-control button:focus {\n  text-decoration: none;\n  outline: 1px solid var(--ol-subtle-foreground-color);\n  color: var(--ol-foreground-color);\n}\n\n.ol-zoom .ol-zoom-in {\n  border-radius: 2px 2px 0 0;\n}\n\n.ol-zoom .ol-zoom-out {\n  border-radius: 0 0 2px 2px;\n}\n\n.ol-attribution {\n  text-align: right;\n  bottom: .5em;\n  right: .5em;\n  max-width: calc(100% - 1.3em);\n  display: flex;\n  flex-flow: row-reverse;\n  align-items: center;\n}\n\n.ol-attribution a {\n  color: var(--ol-subtle-foreground-color);\n  text-decoration: none;\n}\n\n.ol-attribution ul {\n  margin: 0;\n  padding: 1px .5em;\n  color: var(--ol-foreground-color);\n  text-shadow: 0 0 2px var(--ol-background-color);\n  font-size: 12px;\n}\n\n.ol-attribution li {\n  display: inline;\n  list-style: none;\n}\n\n.ol-attribution li:not(:last-child):after {\n  content: \" \";\n}\n\n.ol-attribution img {\n  max-height: 2em;\n  max-width: inherit;\n  vertical-align: middle;\n}\n\n.ol-attribution button {\n  flex-shrink: 0;\n}\n\n.ol-attribution.ol-collapsed ul {\n  display: none;\n}\n\n.ol-attribution:not(.ol-collapsed) {\n  background: var(--ol-partial-background-color);\n}\n\n.ol-attribution.ol-uncollapsible {\n  bottom: 0;\n  right: 0;\n  border-radius: 4px 0 0;\n}\n\n.ol-attribution.ol-uncollapsible img {\n  margin-top: -.2em;\n  max-height: 1.6em;\n}\n\n.ol-attribution.ol-uncollapsible button {\n  display: none;\n}\n\n.ol-zoomslider {\n  top: 4.5em;\n  left: .5em;\n  height: 200px;\n}\n\n.ol-zoomslider button {\n  position: relative;\n  height: 10px;\n}\n\n.ol-touch .ol-zoomslider {\n  top: 5.5em;\n}\n\n.ol-overviewmap {\n  left: 0.5em;\n  bottom: 0.5em;\n}\n\n.ol-overviewmap.ol-uncollapsible {\n  bottom: 0;\n  left: 0;\n  border-radius: 0 4px 0 0;\n}\n\n.ol-overviewmap .ol-overviewmap-map,\n.ol-overviewmap button {\n  display: block;\n}\n\n.ol-overviewmap .ol-overviewmap-map {\n  border: 1px solid var(--ol-subtle-foreground-color);\n  height: 150px;\n  width: 150px;\n}\n\n.ol-overviewmap:not(.ol-collapsed) button {\n  bottom: 0;\n  left: 0;\n  position: absolute;\n}\n\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\n.ol-overviewmap.ol-uncollapsible button {\n  display: none;\n}\n\n.ol-overviewmap:not(.ol-collapsed) {\n  background: var(--ol-subtle-background-color);\n}\n\n.ol-overviewmap-box {\n  border: 1.5px dotted var(--ol-subtle-foreground-color);\n}\n\n.ol-overviewmap .ol-overviewmap-box:hover {\n  cursor: move;\n}\n\n.ol-overviewmap .ol-viewport:hover {\n  cursor: pointer;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/ol/ol.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\":root,\\n:host {\\n  --ol-background-color: white;\\n  --ol-accent-background-color: #F5F5F5;\\n  --ol-subtle-background-color: rgba(128, 128, 128, 0.25);\\n  --ol-partial-background-color: rgba(255, 255, 255, 0.75);\\n  --ol-foreground-color: #333333;\\n  --ol-subtle-foreground-color: #666666;\\n  --ol-brand-color: #00AAFF;\\n}\\n\\n.ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 1.5px solid var(--ol-background-color);\\n  background-color: var(--ol-partial-background-color);\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: var(--ol-partial-background-color);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line-inner {\\n  border: 1px solid var(--ol-subtle-foreground-color);\\n  border-top: none;\\n  color: var(--ol-foreground-color);\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n  transition: all 0.25s;\\n}\\n\\n.ol-scale-bar {\\n  position: absolute;\\n  bottom: 8px;\\n  left: 8px;\\n}\\n\\n.ol-scale-bar-inner {\\n  display: flex;\\n}\\n\\n.ol-scale-step-marker {\\n  width: 1px;\\n  height: 15px;\\n  background-color: var(--ol-foreground-color);\\n  float: right;\\n  z-index: 10;\\n}\\n\\n.ol-scale-step-text {\\n  position: absolute;\\n  bottom: -5px;\\n  font-size: 10px;\\n  z-index: 11;\\n  color: var(--ol-foreground-color);\\n  text-shadow: -1.5px 0 var(--ol-partial-background-color), 0 1.5px var(--ol-partial-background-color), 1.5px 0 var(--ol-partial-background-color), 0 -1.5px var(--ol-partial-background-color);\\n}\\n\\n.ol-scale-text {\\n  position: absolute;\\n  font-size: 12px;\\n  text-align: center;\\n  bottom: 25px;\\n  color: var(--ol-foreground-color);\\n  text-shadow: -1.5px 0 var(--ol-partial-background-color), 0 1.5px var(--ol-partial-background-color), 1.5px 0 var(--ol-partial-background-color), 0 -1.5px var(--ol-partial-background-color);\\n}\\n\\n.ol-scale-singlebar {\\n  position: relative;\\n  height: 10px;\\n  z-index: 9;\\n  box-sizing: border-box;\\n  border: 1px solid var(--ol-foreground-color);\\n}\\n\\n.ol-scale-singlebar-even {\\n  background-color: var(--ol-subtle-foreground-color);\\n}\\n\\n.ol-scale-singlebar-odd {\\n  background-color: var(--ol-background-color);\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n\\n.ol-viewport,\\n.ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: transparent;\\n}\\n\\n.ol-viewport canvas {\\n  all: unset;\\n  overflow: hidden;\\n}\\n\\n.ol-viewport {\\n  touch-action: pan-x pan-y;\\n}\\n\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  user-select: text;\\n}\\n\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n\\n.ol-control {\\n  position: absolute;\\n  background-color: var(--ol-subtle-background-color);\\n  border-radius: 4px;\\n}\\n\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: var(--ol-subtle-foreground-color);\\n  font-weight: bold;\\n  text-decoration: none;\\n  font-size: inherit;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: var(--ol-background-color);\\n  border: none;\\n  border-radius: 2px;\\n}\\n\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  will-change: transform;\\n}\\n\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  outline: 1px solid var(--ol-subtle-foreground-color);\\n  color: var(--ol-foreground-color);\\n}\\n\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n  display: flex;\\n  flex-flow: row-reverse;\\n  align-items: center;\\n}\\n\\n.ol-attribution a {\\n  color: var(--ol-subtle-foreground-color);\\n  text-decoration: none;\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 1px .5em;\\n  color: var(--ol-foreground-color);\\n  text-shadow: 0 0 2px var(--ol-background-color);\\n  font-size: 12px;\\n}\\n\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n}\\n\\n.ol-attribution li:not(:last-child):after {\\n  content: \\\" \\\";\\n}\\n\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n\\n.ol-attribution button {\\n  flex-shrink: 0;\\n}\\n\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n\\n.ol-attribution:not(.ol-collapsed) {\\n  background: var(--ol-partial-background-color);\\n}\\n\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n}\\n\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: block;\\n}\\n\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid var(--ol-subtle-foreground-color);\\n  height: 150px;\\n  width: 150px;\\n}\\n\\n.ol-overviewmap:not(.ol-collapsed) button {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n}\\n\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: var(--ol-subtle-background-color);\\n}\\n\\n.ol-overviewmap-box {\\n  border: 1.5px dotted var(--ol-subtle-foreground-color);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n\\n.ol-overviewmap .ol-viewport:hover {\\n  cursor: pointer;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.map {\r\n    background-color: #f4f6f3;\r\n    padding: 4rem 0;\r\n}\r\n\r\n.map .general-section-subcontainer {\r\n    border: 2.5px dashed #676767;\r\n    border-radius: 0.75rem;\r\n    overflow: hidden;\r\n    padding: 0;\r\n    width: 95%;\r\n}\r\n\r\n#map-embed {\r\n    aspect-ratio: 1/1.25;\r\n    height: 24rem;\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/map-styles.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,yBAAyB;IACzB,eAAe;AACnB;;AAEA;IACI,4BAA4B;IAC5B,sBAAsB;IACtB,gBAAgB;IAChB,UAAU;IACV,UAAU;AACd;;AAEA;IACI,oBAAoB;IACpB,aAAa;AACjB\",\"sourcesContent\":[\".map {\\r\\n    background-color: #f4f6f3;\\r\\n    padding: 4rem 0;\\r\\n}\\r\\n\\r\\n.map .general-section-subcontainer {\\r\\n    border: 2.5px dashed #676767;\\r\\n    border-radius: 0.75rem;\\r\\n    overflow: hidden;\\r\\n    padding: 0;\\r\\n    width: 95%;\\r\\n}\\r\\n\\r\\n#map-embed {\\r\\n    aspect-ratio: 1/1.25;\\r\\n    height: 24rem;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","document.addEventListener(`DOMContentLoaded`, () => {\r\n  // if (document.readyState !== \"complete\") {\r\n  //   document.querySelector(\".loader-container\").classList.remove(\"removed\");\r\n  // } else {\r\n  //   document.querySelector(\".loader-container\").classList.add(\"removed\");\r\n  // }\r\n  document.querySelector(\".loader-container\").classList.add(\"removed\");\r\n});\r\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.underline-animate {\r\n    position: relative;\r\n    width: fit-content;\r\n    margin: auto;\r\n}\r\n\r\n.underline-animate::after {\r\n    content: \"\";\r\n    width: 100%;\r\n    height: 2px;\r\n\r\n    transform: scaleX(0);\r\n\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n\r\n    background-color: #0091ff;\r\n\r\n    transition: transform 0.25s ease-out;\r\n    transform-origin: bottom right;\r\n}\r\n\r\n.underline-parent:hover .underline-animate:after,\r\n.underline-parent:active .underline-animate:after,\r\n.underline-animate:hover:after,\r\n.underline-animate:active:after {\r\n    transform: scaleX(1);\r\n    transform-origin: bottom left;\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/text-underline-animation.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,WAAW;IACX,WAAW;;IAEX,oBAAoB;;IAEpB,kBAAkB;IAClB,SAAS;IACT,OAAO;;IAEP,yBAAyB;;IAEzB,oCAAoC;IACpC,8BAA8B;AAClC;;AAEA;;;;IAII,oBAAoB;IACpB,6BAA6B;AACjC\",\"sourcesContent\":[\".underline-animate {\\r\\n    position: relative;\\r\\n    width: fit-content;\\r\\n    margin: auto;\\r\\n}\\r\\n\\r\\n.underline-animate::after {\\r\\n    content: \\\"\\\";\\r\\n    width: 100%;\\r\\n    height: 2px;\\r\\n\\r\\n    transform: scaleX(0);\\r\\n\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n\\r\\n    background-color: #0091ff;\\r\\n\\r\\n    transition: transform 0.25s ease-out;\\r\\n    transform-origin: bottom right;\\r\\n}\\r\\n\\r\\n.underline-parent:hover .underline-animate:after,\\r\\n.underline-parent:active .underline-animate:after,\\r\\n.underline-animate:hover:after,\\r\\n.underline-animate:active:after {\\r\\n    transform: scaleX(1);\\r\\n    transform-origin: bottom left;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.contact-info {\r\n    padding: 4rem 0;\r\n    background-color: white;\r\n}\r\n\r\n.contact-info .general-section-subcontainer {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\r\n    gap: 2rem;\r\n\r\n    /* width: 90%; */\r\n    max-width: 1000px;\r\n    justify-content: center;\r\n    justify-items: stretch;\r\n\r\n    align-items: stretch;\r\n}\r\n\r\n.contact-info-card {\r\n\r\n    /* Compatibility */\r\n    border: 1px solid rgba(0, 0, 0, 0.2);\r\n    border-radius: 0.75rem;\r\n    overflow: hidden;\r\n    background-color: #fcfbf8;\r\n\r\n    transition: transform 0.3s, box-shadow 0.3s;\r\n    /* Compatibility */\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n\r\n    padding: 2.5rem 1.5rem;\r\n    height: auto;\r\n}\r\n\r\n.contact-info-card:hover {\r\n    transform: translateY(-0.5%);\r\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\r\n\r\n}\r\n\r\n.contact-info-icon {\r\n    margin-top: 0.5rem;\r\n    align-self: baseline;\r\n    padding: 0.75rem;\r\n    border-radius: 0.75rem;\r\n}\r\n\r\n.office-adress .contact-info-icon {\r\n    background-color: rgb(230 235 228);\r\n\r\n}\r\n\r\n.call .contact-info-icon {\r\n    background-color: #f0ebe2;\r\n\r\n}\r\n\r\n.email-us .contact-info-icon {\r\n    background-color: #fdf8f0\r\n}\r\n\r\n.business-hours .contact-info-icon {\r\n    background-color: #e6ebe4;\r\n}\r\n\r\n.contact-info-icon img {\r\n    object-fit: contain;\r\n    object-position: center;\r\n\r\n    width: 1.5rem;\r\n    min-width: 24px;\r\n}\r\n\r\n.contact-text {\r\n    color: #4b5563;\r\n    text-decoration: none;\r\n}\r\n\r\n.contact-text h3 {\r\n    margin-bottom: 0.5rem;\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/contact-us-styles.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,eAAe;IACf,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,2DAA2D;IAC3D,SAAS;;IAET,gBAAgB;IAChB,iBAAiB;IACjB,uBAAuB;IACvB,sBAAsB;;IAEtB,oBAAoB;AACxB;;AAEA;;IAEI,kBAAkB;IAClB,oCAAoC;IACpC,sBAAsB;IACtB,gBAAgB;IAChB,yBAAyB;;IAEzB,2CAA2C;IAC3C,kBAAkB;;IAElB,aAAa;IACb,mBAAmB;IACnB,SAAS;;IAET,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,4BAA4B;IAC5B,2CAA2C;;AAE/C;;AAEA;IACI,kBAAkB;IAClB,oBAAoB;IACpB,gBAAgB;IAChB,sBAAsB;AAC1B;;AAEA;IACI,kCAAkC;;AAEtC;;AAEA;IACI,yBAAyB;;AAE7B;;AAEA;IACI;AACJ;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,mBAAmB;IACnB,uBAAuB;;IAEvB,aAAa;IACb,eAAe;AACnB;;AAEA;IACI,cAAc;IACd,qBAAqB;AACzB;;AAEA;IACI,qBAAqB;AACzB\",\"sourcesContent\":[\".contact-info {\\r\\n    padding: 4rem 0;\\r\\n    background-color: white;\\r\\n}\\r\\n\\r\\n.contact-info .general-section-subcontainer {\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\\r\\n    gap: 2rem;\\r\\n\\r\\n    /* width: 90%; */\\r\\n    max-width: 1000px;\\r\\n    justify-content: center;\\r\\n    justify-items: stretch;\\r\\n\\r\\n    align-items: stretch;\\r\\n}\\r\\n\\r\\n.contact-info-card {\\r\\n\\r\\n    /* Compatibility */\\r\\n    border: 1px solid rgba(0, 0, 0, 0.2);\\r\\n    border-radius: 0.75rem;\\r\\n    overflow: hidden;\\r\\n    background-color: #fcfbf8;\\r\\n\\r\\n    transition: transform 0.3s, box-shadow 0.3s;\\r\\n    /* Compatibility */\\r\\n\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    gap: 1rem;\\r\\n\\r\\n    padding: 2.5rem 1.5rem;\\r\\n    height: auto;\\r\\n}\\r\\n\\r\\n.contact-info-card:hover {\\r\\n    transform: translateY(-0.5%);\\r\\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\\r\\n\\r\\n}\\r\\n\\r\\n.contact-info-icon {\\r\\n    margin-top: 0.5rem;\\r\\n    align-self: baseline;\\r\\n    padding: 0.75rem;\\r\\n    border-radius: 0.75rem;\\r\\n}\\r\\n\\r\\n.office-adress .contact-info-icon {\\r\\n    background-color: rgb(230 235 228);\\r\\n\\r\\n}\\r\\n\\r\\n.call .contact-info-icon {\\r\\n    background-color: #f0ebe2;\\r\\n\\r\\n}\\r\\n\\r\\n.email-us .contact-info-icon {\\r\\n    background-color: #fdf8f0\\r\\n}\\r\\n\\r\\n.business-hours .contact-info-icon {\\r\\n    background-color: #e6ebe4;\\r\\n}\\r\\n\\r\\n.contact-info-icon img {\\r\\n    object-fit: contain;\\r\\n    object-position: center;\\r\\n\\r\\n    width: 1.5rem;\\r\\n    min-width: 24px;\\r\\n}\\r\\n\\r\\n.contact-text {\\r\\n    color: #4b5563;\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\n.contact-text h3 {\\r\\n    margin-bottom: 0.5rem;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"../assets/LMD-white-small.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"../assets/LMD-black-small.png\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.header-extended-menu-container,\r\n.header-extended-menu-container.never-transparent {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 1rem 0;\r\n\r\n    background: var(--light-mode-bg-color-primary);\r\n    backdrop-filter: blur(4px);\r\n    transition: background 0.3s;\r\n\r\n    position: fixed;\r\n    z-index: 99999;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n\r\n    user-select: none;\r\n}\r\n\r\n.header-extended-menu-container a,\r\n.header-extended-menu-container.never-transparent a {\r\n\r\n    text-decoration: none;\r\n    color: var(--light-mode-bg-font-color);\r\n}\r\n\r\n.header-extended-menu-container.never-transparent {\r\n    position: sticky;\r\n}\r\n\r\n/* #region Styles when header is transparent */\r\n.transparent-container {\r\n    background: transparent;\r\n    backdrop-filter: blur(7px);\r\n    color: var(--transparent-bg-font-color);\r\n    transition: background 0.3s;\r\n\r\n    border: none;\r\n}\r\n\r\n.transparent-container a {\r\n    color: var(--transparent-bg-font-color);\r\n}\r\n\r\n.transparent-container .bar {\r\n    background-color: var(--transparent-bg-font-color);\r\n}\r\n\r\n.transparent-container .logo-icon {\r\n    background: url(${___CSS_LOADER_URL_REPLACEMENT_0___});\r\n    background-size: contain;\r\n}\r\n\r\n/* #endregion Styles when header is transparent */\r\n\r\n/* #region Header Bar Styling */\r\n.header {\r\n    display: flex;\r\n    padding: 0 1rem;\r\n\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n\r\n.logo {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n\r\n    cursor: pointer;\r\n    animation: header-animation 0.4s ease-in-out;\r\n}\r\n\r\n.logo-icon,\r\n.header-extended-menu-container.never-transparent .logo-icon {\r\n\r\n    background: url(${___CSS_LOADER_URL_REPLACEMENT_1___});\r\n    background-size: contain;\r\n    background-position: center;\r\n\r\n    width: 2.75rem;\r\n    aspect-ratio: 160/142;\r\n}\r\n\r\n.logo-text {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: start;\r\n    line-height: 0.65;\r\n    gap: 0.5rem;\r\n\r\n    font-family: \"PT Serif\", serif;\r\n\r\n}\r\n\r\n.agency-name {\r\n    font-size: 1.75rem;\r\n    font-weight: bold;\r\n}\r\n\r\n.punch-line {\r\n    font-size: 0.75rem;\r\n    padding-left: 1px;\r\n}\r\n\r\n.nav-links {\r\n    display: none;\r\n    opacity: 0;\r\n}\r\n\r\n/* #endregion Header Bar Styling */\r\n\r\n/* #region Hamburger Menu Styling */\r\n\r\n.hamburger-menu {\r\n    padding: 0.5rem;\r\n    border-radius: 0.25rem;\r\n\r\n    transition: background cubic-bezier(.4, 0, .2, 1) 0.15s;\r\n    cursor: pointer;\r\n\r\n    animation: header-animation 0.5s ease-in-out;\r\n}\r\n\r\n/* .hamburger-menu:hover {\r\n    background: var(--hover-highlight-color);\r\n} */\r\n\r\n.hamburger {\r\n    position: relative;\r\n    height: 18px;\r\n    width: 27px;\r\n}\r\n\r\n.bar,\r\n.header-extended-menu-container.never-transparent .bar {\r\n    height: 0.125rem;\r\n    width: 100%;\r\n    position: absolute;\r\n    transform-origin: left center;\r\n    transform: rotate(0deg);\r\n    transition: all 0.3s ease-in-out;\r\n    left: 0;\r\n    border-radius: 0.25rem;\r\n    background-color: var(--light-mode-bg-font-color);\r\n}\r\n\r\n.bar:nth-child(1) {\r\n    top: 0;\r\n}\r\n\r\n.bar:nth-child(2) {\r\n    top: 8px;\r\n}\r\n\r\n.bar:nth-child(3) {\r\n    bottom: 0;\r\n}\r\n\r\n.hamburger.cross .bar:first-child {\r\n    transform: rotate(45deg);\r\n    left: 3.5px;\r\n    top: -1.5px;\r\n}\r\n\r\n.hamburger.cross .bar:last-child {\r\n    transform: rotate(-45deg);\r\n    left: 3.5px;\r\n    bottom: -1.5px;\r\n}\r\n\r\n.hamburger.cross .bar:nth-child(2) {\r\n    width: 0;\r\n    opacity: 0;\r\n}\r\n\r\n/* #endregion Hamburger Menu Styling */\r\n\r\n/* #region Extended menu styling */\r\n\r\n.extended-menu {\r\n    max-height: 0;\r\n    opacity: 0;\r\n    overflow: hidden;\r\n    padding: 0;\r\n    transform: translateY(-1.25rem);\r\n    transition: max-height 0.2s ease, opacity 0.5s ease, transform 0.4s ease;\r\n    /* justify-content: ; */\r\n}\r\n\r\n.extended-menu.expanded {\r\n    max-height: 100vh;\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n    transition: max-height 0.5s ease;\r\n}\r\n\r\n.extended-menu-padding {\r\n    padding-top: 0.75rem;\r\n}\r\n\r\n.extended-menu .links {\r\n    font-size: 1.5rem;\r\n    cursor: pointer;\r\n    padding: 0.5rem 1rem;\r\n    color: black;\r\n\r\n    transition: background cubic-bezier(.4, 0, .2, 1) 0.15s;\r\n}\r\n\r\n.extended-menu .links:hover {\r\n    background: var(--hover-highlight-color);\r\n}\r\n\r\n/* #endregion Extended menu styling */\r\n\r\n/* #region Animations */\r\n\r\n@keyframes header-animation {\r\n    0% {\r\n        transform: translateY(-100%);\r\n    }\r\n\r\n    100% {\r\n        transform: translateY(0);\r\n    }\r\n}\r\n\r\n/* #endregion Animations */\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/header-styles.css\"],\"names\":[],\"mappings\":\"AAAA;;IAEI,aAAa;IACb,sBAAsB;IACtB,eAAe;;IAEf,8CAA8C;IAC9C,0BAA0B;IAC1B,2BAA2B;;IAE3B,eAAe;IACf,cAAc;IACd,MAAM;IACN,OAAO;IACP,QAAQ;;IAER,2CAA2C;;IAE3C,iBAAiB;AACrB;;AAEA;;;IAGI,qBAAqB;IACrB,sCAAsC;AAC1C;;AAEA;IACI,gBAAgB;AACpB;;AAEA,8CAA8C;AAC9C;IACI,uBAAuB;IACvB,0BAA0B;IAC1B,uCAAuC;IACvC,2BAA2B;;IAE3B,YAAY;AAChB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,kDAAkD;AACtD;;AAEA;IACI,mDAA8C;IAC9C,wBAAwB;AAC5B;;AAEA,iDAAiD;;AAEjD,+BAA+B;AAC/B;IACI,aAAa;IACb,eAAe;;IAEf,mBAAmB;IACnB,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,WAAW;;IAEX,eAAe;IACf,4CAA4C;AAChD;;AAEA;;;IAGI,mDAA8C;IAC9C,wBAAwB;IACxB,2BAA2B;;IAE3B,cAAc;IACd,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,kBAAkB;IAClB,iBAAiB;IACjB,WAAW;;IAEX,8BAA8B;;AAElC;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,UAAU;AACd;;AAEA,kCAAkC;;AAElC,mCAAmC;;AAEnC;IACI,eAAe;IACf,sBAAsB;;IAEtB,uDAAuD;IACvD,eAAe;;IAEf,4CAA4C;AAChD;;AAEA;;GAEG;;AAEH;IACI,kBAAkB;IAClB,YAAY;IACZ,WAAW;AACf;;AAEA;;IAEI,gBAAgB;IAChB,WAAW;IACX,kBAAkB;IAClB,6BAA6B;IAC7B,uBAAuB;IACvB,gCAAgC;IAChC,OAAO;IACP,sBAAsB;IACtB,iDAAiD;AACrD;;AAEA;IACI,MAAM;AACV;;AAEA;IACI,QAAQ;AACZ;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,wBAAwB;IACxB,WAAW;IACX,WAAW;AACf;;AAEA;IACI,yBAAyB;IACzB,WAAW;IACX,cAAc;AAClB;;AAEA;IACI,QAAQ;IACR,UAAU;AACd;;AAEA,sCAAsC;;AAEtC,kCAAkC;;AAElC;IACI,aAAa;IACb,UAAU;IACV,gBAAgB;IAChB,UAAU;IACV,+BAA+B;IAC/B,wEAAwE;IACxE,uBAAuB;AAC3B;;AAEA;IACI,iBAAiB;IACjB,UAAU;IACV,wBAAwB;IACxB,gCAAgC;AACpC;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,iBAAiB;IACjB,eAAe;IACf,oBAAoB;IACpB,YAAY;;IAEZ,uDAAuD;AAC3D;;AAEA;IACI,wCAAwC;AAC5C;;AAEA,qCAAqC;;AAErC,uBAAuB;;AAEvB;IACI;QACI,4BAA4B;IAChC;;IAEA;QACI,wBAAwB;IAC5B;AACJ;;AAEA,0BAA0B\",\"sourcesContent\":[\".header-extended-menu-container,\\r\\n.header-extended-menu-container.never-transparent {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    padding: 1rem 0;\\r\\n\\r\\n    background: var(--light-mode-bg-color-primary);\\r\\n    backdrop-filter: blur(4px);\\r\\n    transition: background 0.3s;\\r\\n\\r\\n    position: fixed;\\r\\n    z-index: 99999;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n\\r\\n    border-bottom: 1px solid rgba(0, 0, 0, 0.2);\\r\\n\\r\\n    user-select: none;\\r\\n}\\r\\n\\r\\n.header-extended-menu-container a,\\r\\n.header-extended-menu-container.never-transparent a {\\r\\n\\r\\n    text-decoration: none;\\r\\n    color: var(--light-mode-bg-font-color);\\r\\n}\\r\\n\\r\\n.header-extended-menu-container.never-transparent {\\r\\n    position: sticky;\\r\\n}\\r\\n\\r\\n/* #region Styles when header is transparent */\\r\\n.transparent-container {\\r\\n    background: transparent;\\r\\n    backdrop-filter: blur(7px);\\r\\n    color: var(--transparent-bg-font-color);\\r\\n    transition: background 0.3s;\\r\\n\\r\\n    border: none;\\r\\n}\\r\\n\\r\\n.transparent-container a {\\r\\n    color: var(--transparent-bg-font-color);\\r\\n}\\r\\n\\r\\n.transparent-container .bar {\\r\\n    background-color: var(--transparent-bg-font-color);\\r\\n}\\r\\n\\r\\n.transparent-container .logo-icon {\\r\\n    background: url(../assets/LMD-white-small.png);\\r\\n    background-size: contain;\\r\\n}\\r\\n\\r\\n/* #endregion Styles when header is transparent */\\r\\n\\r\\n/* #region Header Bar Styling */\\r\\n.header {\\r\\n    display: flex;\\r\\n    padding: 0 1rem;\\r\\n\\r\\n    align-items: center;\\r\\n    justify-content: space-between;\\r\\n}\\r\\n\\r\\n.logo {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    gap: 0.5rem;\\r\\n\\r\\n    cursor: pointer;\\r\\n    animation: header-animation 0.4s ease-in-out;\\r\\n}\\r\\n\\r\\n.logo-icon,\\r\\n.header-extended-menu-container.never-transparent .logo-icon {\\r\\n\\r\\n    background: url(../assets/LMD-black-small.png);\\r\\n    background-size: contain;\\r\\n    background-position: center;\\r\\n\\r\\n    width: 2.75rem;\\r\\n    aspect-ratio: 160/142;\\r\\n}\\r\\n\\r\\n.logo-text {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: start;\\r\\n    line-height: 0.65;\\r\\n    gap: 0.5rem;\\r\\n\\r\\n    font-family: \\\"PT Serif\\\", serif;\\r\\n\\r\\n}\\r\\n\\r\\n.agency-name {\\r\\n    font-size: 1.75rem;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.punch-line {\\r\\n    font-size: 0.75rem;\\r\\n    padding-left: 1px;\\r\\n}\\r\\n\\r\\n.nav-links {\\r\\n    display: none;\\r\\n    opacity: 0;\\r\\n}\\r\\n\\r\\n/* #endregion Header Bar Styling */\\r\\n\\r\\n/* #region Hamburger Menu Styling */\\r\\n\\r\\n.hamburger-menu {\\r\\n    padding: 0.5rem;\\r\\n    border-radius: 0.25rem;\\r\\n\\r\\n    transition: background cubic-bezier(.4, 0, .2, 1) 0.15s;\\r\\n    cursor: pointer;\\r\\n\\r\\n    animation: header-animation 0.5s ease-in-out;\\r\\n}\\r\\n\\r\\n/* .hamburger-menu:hover {\\r\\n    background: var(--hover-highlight-color);\\r\\n} */\\r\\n\\r\\n.hamburger {\\r\\n    position: relative;\\r\\n    height: 18px;\\r\\n    width: 27px;\\r\\n}\\r\\n\\r\\n.bar,\\r\\n.header-extended-menu-container.never-transparent .bar {\\r\\n    height: 0.125rem;\\r\\n    width: 100%;\\r\\n    position: absolute;\\r\\n    transform-origin: left center;\\r\\n    transform: rotate(0deg);\\r\\n    transition: all 0.3s ease-in-out;\\r\\n    left: 0;\\r\\n    border-radius: 0.25rem;\\r\\n    background-color: var(--light-mode-bg-font-color);\\r\\n}\\r\\n\\r\\n.bar:nth-child(1) {\\r\\n    top: 0;\\r\\n}\\r\\n\\r\\n.bar:nth-child(2) {\\r\\n    top: 8px;\\r\\n}\\r\\n\\r\\n.bar:nth-child(3) {\\r\\n    bottom: 0;\\r\\n}\\r\\n\\r\\n.hamburger.cross .bar:first-child {\\r\\n    transform: rotate(45deg);\\r\\n    left: 3.5px;\\r\\n    top: -1.5px;\\r\\n}\\r\\n\\r\\n.hamburger.cross .bar:last-child {\\r\\n    transform: rotate(-45deg);\\r\\n    left: 3.5px;\\r\\n    bottom: -1.5px;\\r\\n}\\r\\n\\r\\n.hamburger.cross .bar:nth-child(2) {\\r\\n    width: 0;\\r\\n    opacity: 0;\\r\\n}\\r\\n\\r\\n/* #endregion Hamburger Menu Styling */\\r\\n\\r\\n/* #region Extended menu styling */\\r\\n\\r\\n.extended-menu {\\r\\n    max-height: 0;\\r\\n    opacity: 0;\\r\\n    overflow: hidden;\\r\\n    padding: 0;\\r\\n    transform: translateY(-1.25rem);\\r\\n    transition: max-height 0.2s ease, opacity 0.5s ease, transform 0.4s ease;\\r\\n    /* justify-content: ; */\\r\\n}\\r\\n\\r\\n.extended-menu.expanded {\\r\\n    max-height: 100vh;\\r\\n    opacity: 1;\\r\\n    transform: translateY(0);\\r\\n    transition: max-height 0.5s ease;\\r\\n}\\r\\n\\r\\n.extended-menu-padding {\\r\\n    padding-top: 0.75rem;\\r\\n}\\r\\n\\r\\n.extended-menu .links {\\r\\n    font-size: 1.5rem;\\r\\n    cursor: pointer;\\r\\n    padding: 0.5rem 1rem;\\r\\n    color: black;\\r\\n\\r\\n    transition: background cubic-bezier(.4, 0, .2, 1) 0.15s;\\r\\n}\\r\\n\\r\\n.extended-menu .links:hover {\\r\\n    background: var(--hover-highlight-color);\\r\\n}\\r\\n\\r\\n/* #endregion Extended menu styling */\\r\\n\\r\\n/* #region Animations */\\r\\n\\r\\n@keyframes header-animation {\\r\\n    0% {\\r\\n        transform: translateY(-100%);\\r\\n    }\\r\\n\\r\\n    100% {\\r\\n        transform: translateY(0);\\r\\n    }\\r\\n}\\r\\n\\r\\n/* #endregion Animations */\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t353: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","__webpack_require__.nc = undefined;","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./default-reset.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./default-reset.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./header-styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./header-styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./contact-us-styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./contact-us-styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./text-underline-animation.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./text-underline-animation.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./why-choose-us.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./why-choose-us.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./map-styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./map-styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./footer.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./footer.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./util-styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./util-styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../css-loader/dist/cjs.js!./ol.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../css-loader/dist/cjs.js!./ol.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.6.1';\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/Collection\n */\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {PointerEvent|KeyboardEvent|WheelEvent} [EVENT=PointerEvent|KeyboardEvent|WheelEvent]\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport EventType from './events/EventType.js';\nimport Target from './events/Target.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport PointerEventType from './pointer/EventType.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import('./tilecoord.js').TileCoord, number): number} PriorityFunction\n */\n\n/**\n * @typedef {[import('./Tile.js').default, string, import('./tilecoord.js').TileCoord, number]} TileQueueElement\n */\n\n/**\n * @extends PriorityQueue<TileQueueElement>}\n */\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      (element) => tilePriorityFunction.apply(null, element),\n      (element) => element[0].getKey(),\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {TileQueueElement} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * The function is called with a `number` view resolution and a\n * {@link module:ol/coordinate~Coordinate} as arguments, and returns the `number` resolution\n * in projection units at the passed coordinate.\n * @typedef {function(number, import(\"../coordinate.js\").Coordinate):number} GetPointResolution\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {GetPointResolution} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * In most cases, you should not need to create instances of this class.\n * Instead, where projection information is required, you can use a string\n * projection code or identifier (e.g. `EPSG:4326`) instead of a projection\n * instance.\n *\n * The library includes support for transforming coordinates between the following\n * projections:\n *\n *  WGS 84 / Geographic - Using codes `EPSG:4326`, `CRS:84`, `urn:ogc:def:crs:EPSG:6.6:4326`,\n *    `urn:ogc:def:crs:OGC:1.3:CRS84`, `urn:ogc:def:crs:OGC:2:84`, `http://www.opengis.net/gml/srs/epsg.xml#4326`,\n *    or `urn:x-ogc:def:crs:EPSG:4326`\n *  WGS 84 / Spherical Mercator - Using codes `EPSG:3857`, `EPSG:102100`, `EPSG:102113`, `EPSG:900913`,\n *    `urn:ogc:def:crs:EPSG:6.18:3:3857`, or `http://www.opengis.net/gml/srs/epsg.xml#3857`\n *  WGS 84 / UTM zones - Using codes `EPSG:32601` through `EPSG:32660` for northern zones\n *    and `EPSG:32701` through `EPSG:32760` for southern zones. Note that the built-in UTM transforms\n *    are lower accuracy (with errors on the order of 0.1 m) than those that you might get in a\n *    library like [proj4js](https://github.com/proj4js/proj4js).\n *\n * For additional projection support, or to use higher accuracy transforms than the built-in ones, you can use\n * the [proj4js](https://github.com/proj4js/proj4js) library. With `proj4js`, after adding any new projection\n * definitions, call the {@link module:ol/proj/proj4.register} function.\n *\n * You can use the {@link module:ol/proj.get} function to retrieve a projection instance\n * for one of the registered projections.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {GetPointResolution|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {GetPointResolution|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default|null} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|null} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    return transforms[sourceCode][destinationCode];\n  }\n  return null;\n}\n","/**\n * @module ol/proj/utm\n */\n\n/**\n * Adapted from https://github.com/Turbo87/utm\n * Copyright (c) 2012-2017 Tobias Bieniek\n *\n * The functions here provide approximate transforms to and from UTM.\n * They are not appropriate for use beyond the validity extend of a UTM\n * zone, and the accuracy of the transform decreases toward the zone\n * edges.\n */\n\nimport {toDegrees, toRadians, wrap} from '../math.js';\nimport Projection from './Projection.js';\n\n/**\n * @typedef {Object} UTMZone\n * @property {number} number The zone number (1 - 60).\n * @property {boolean} north The northern hemisphere.\n */\n\nconst K0 = 0.9996;\n\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\n\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\n\nconst M1 = 1 - E / 4 - (3 * E2) / 64 - (5 * E3) / 256;\nconst M2 = (3 * E) / 8 + (3 * E2) / 32 + (45 * E3) / 1024;\nconst M3 = (15 * E2) / 256 + (45 * E3) / 1024;\nconst M4 = (35 * E3) / 3072;\n\nconst P2 = (3 / 2) * _E - (27 / 32) * _E3 + (269 / 512) * _E5;\nconst P3 = (21 / 16) * _E2 - (55 / 32) * _E4;\nconst P4 = (151 / 96) * _E3 - (417 / 128) * _E5;\nconst P5 = (1097 / 512) * _E4;\n\nconst R = 6378137;\n\n/**\n * @param {number} easting Easting value of coordinate.\n * @param {number} northing Northing value of coordinate.\n * @param {UTMZone} zone The UTM zone.\n * @return {import(\"../coordinate.js\").Coordinate} The transformed coordinate.\n */\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n\n  const m = y / K0;\n  const mu = m / (R * M1);\n\n  const pRad =\n    mu +\n    P2 * Math.sin(2 * mu) +\n    P3 * Math.sin(4 * mu) +\n    P4 * Math.sin(6 * mu) +\n    P5 * Math.sin(8 * mu);\n\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n\n  const pCos = Math.cos(pRad);\n\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n\n  const latitude =\n    pRad -\n    (pTan / r) *\n      (d2 / 2 - (d4 / 24) * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) +\n    (d6 / 720) * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n\n  let longitude =\n    (d -\n      (d3 / 6) * (1 + 2 * pTan2 + c) +\n      (d5 / 120) * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) /\n    pCos;\n\n  longitude = wrap(\n    longitude + toRadians(zoneToCentralLongitude(zone.number)),\n    -Math.PI,\n    Math.PI,\n  );\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n}\n\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\n\n/**\n * @param {number} longitude The longitude.\n * @param {number} latitude The latitude.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../coordinate.js').Coordinate} The UTM coordinate.\n */\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = wrap(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n\n  const latRad = toRadians(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n\n  const lonRad = toRadians(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = toRadians(centralLon);\n\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n\n  const a = latCos * wrap(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n\n  const m =\n    R *\n    (M1 * latRad -\n      M2 * Math.sin(2 * latRad) +\n      M3 * Math.sin(4 * latRad) -\n      M4 * Math.sin(6 * latRad));\n\n  const easting =\n    K0 *\n      n *\n      (a +\n        (a3 / 6) * (1 - latTan2 + c) +\n        (a5 / 120) * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) +\n    500000;\n\n  let northing =\n    K0 *\n    (m +\n      n *\n        latTan *\n        (a2 / 2 +\n          (a4 / 24) * (5 - latTan2 + 9 * c + 4 * c ** 2) +\n          (a6 / 720) * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n\n  if (!zone.north) {\n    northing += 10000000;\n  }\n\n  return [easting, northing];\n}\n\n/**\n * @param {number} zone The zone number.\n * @return {number} The central longitude in degrees.\n */\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\n\n/**\n * @type {Array<RegExp>}\n */\nconst epsgRegExes = [\n  /^EPSG:(\\d+)$/,\n  /^urn:ogc:def:crs:EPSG::(\\d+)$/,\n  /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,\n];\n\n/**\n * @param {string} code The projection code.\n * @return {UTMZone|null} The UTM zone info (or null if not UTM).\n */\nexport function zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n\n  return {number, north};\n}\n\n/**\n * @param {function(number, number, UTMZone): import('../coordinate.js').Coordinate} transformer The transformer.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../proj.js').TransformFunction} The transform function.\n */\nfunction makeTransformFunction(transformer, zone) {\n  return function (input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\n\n/**\n * @param {string} code The projection code.\n * @return {import('./Projection.js').default|null} A projection or null if unable to create one.\n */\nexport function makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new Projection({code, units: 'm'});\n}\n\n/**\n * @param {import('./Projection.js').default} projection The projection.\n * @return {import('../proj.js').Transforms|null} The transforms lookup or null if unable to handle projection.\n */\nexport function makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n\n  return {\n    forward: makeTransformFunction(fromLonLat, zone),\n    inverse: makeTransformFunction(toLonLat, zone),\n  };\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {warn} from './console.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport Projection from './proj/Projection.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {\n  makeProjection as makeUTMProjection,\n  makeTransforms as makeUTMTransforms,\n} from './proj/utm.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * @typedef {Object} Transforms\n * @property {TransformFunction} forward The forward transform (from geographic).\n * @property {TransformFunction} inverse The inverse transform (to geographic).\n */\n\n/**\n * @type {Array<function(Projection): Transforms|null>}\n */\nconst transformFactories = [makeUTMTransforms];\n\n/**\n * @type {Array<function(string): Projection|null>}\n */\nconst projectionFactories = [makeUTMProjection];\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  if (!(typeof projectionLike === 'string')) {\n    return projectionLike;\n  }\n  const projection = getProj(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (!toEPSG4326 && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} source Source Projection object.\n * @param {Projection} destination Destination Projection\n *     object.\n * @return {TransformFunction|null} Transform function.\n */\nexport function getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n\n  /**\n   * @type {Transforms|null}\n   */\n  let sourceTransforms = null;\n\n  /**\n   * @type {Transforms|null}\n   */\n  let destinationTransforms = null;\n\n  // lazily add projections if we have supported transforms\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n\n  const intermediateCode = 'EPSG:4326';\n  if (!destinationTransforms) {\n    const toDestination = getTransformFunc(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(\n        sourceTransforms.inverse,\n        toDestination,\n      );\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = getTransformFunc(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(\n        fromSource,\n        destinationTransforms.forward,\n      );\n    }\n  } else {\n    transformFunc = composeTransformFuncs(\n      sourceTransforms.inverse,\n      destinationTransforms.forward,\n    );\n  }\n\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    addTransformFunc(source, destination, transformFunc);\n  }\n\n  return transformFunc;\n}\n\n/**\n * @param {TransformFunction} t1 The first transform function.\n * @param {TransformFunction} t2 The second transform function.\n * @return {TransformFunction} The composed transform function.\n */\nfunction composeTransformFuncs(t1, t2) {\n  return function (input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original). If there\n * is no available transform between the two projection, the function will throw\n * an error.\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(\n      `No transform available between ${sourceCode} and ${destinationCode}`,\n    );\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e5, 1e5, 1e5, 1e5, 2, 2];\n\n/**\n * A matrix string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  return transformString;\n}\n\n/**\n * Create a transform from a CSS transform matrix string.\n * @param {string} cssTransform The CSS string to parse.\n * @return {!Transform} The transform.\n */\nfunction fromString(cssTransform) {\n  const values = cssTransform.substring(7, cssTransform.length - 1).split(',');\n  return values.map(parseFloat);\n}\n\n/**\n * Compare two matrices for equality.\n * @param {!string} cssTransform1 A CSS transform matrix string.\n * @param {!string} cssTransform2 A CSS transform matrix string.\n * @return {boolean} The two matrices are equal.\n */\nexport function equivalent(cssTransform1, cssTransform2) {\n  const mat1 = fromString(cssTransform1);\n  const mat2 = fromString(cssTransform2);\n  for (let i = 0; i < 6; ++i) {\n    if (Math.round((mat1[i] - mat2[i]) * matrixPrecision[i]) !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {abstract} from '../util.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import('../coordinate.js').Coordinate} */\nconst tmpPoint = [NaN, NaN];\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return this.closestPointXY(x, y, tmpPoint, Number.MIN_VALUE) === 0;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            const transformed = transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            const projTransform = getTransform(sourceProj, destination);\n            if (projTransform) {\n              return projTransform(transformed, transformed, stride);\n            }\n            return transformed;\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {abstract} from '../util.js';\nimport Geometry from './Geometry.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://web.archive.org/web/20210504233957/http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {import('../../extent.js').Extent} [coordinatesExtent] Coordinates extent\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n  coordinatesExtent,\n) {\n  coordinatesExtent =\n    coordinatesExtent ??\n    extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (\n    (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) ||\n    (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3])\n  ) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n\n/**\n * Calculate the intersection point of two line segments.\n * Reference: https://stackoverflow.com/a/72474223/2389327\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment1 The first line segment as an array of two points.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment2 The second line segment as an array of two points.\n * @return {import(\"../../coordinate.js\").Coordinate|undefined} The intersection point or `undefined` if no intersection.\n */\nexport function getIntersectionPoint(segment1, segment2) {\n  const [a, b] = segment1;\n  const [c, d] = segment2;\n  const t =\n    ((a[0] - c[0]) * (c[1] - d[1]) - (a[1] - c[1]) * (c[0] - d[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n  const u =\n    ((a[0] - c[0]) * (a[1] - b[1]) - (a[1] - c[1]) * (a[0] - b[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n\n  // Check if lines actually intersect\n  if (0 <= t && t <= 1 && 0 <= u && u <= 1) {\n    return [a[0] + t * (b[0] - a[0]), a[1] + t * (b[1] - a[1])];\n  }\n  return undefined;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport {\n  add as addCoordinate,\n  equals,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {VOID} from './functions.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z0-9]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/** @type {Object<string|number, number>} */\nexport const fontWeights = {\n  normal: 400,\n  bold: 700,\n};\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: '400',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] =\n        typeof value === 'string' ? value.trim() : value;\n    }\n  }\n  if (isNaN(Number(style.weight)) && style.weight in fontWeights) {\n    style.weight = fontWeights[style.weight];\n  }\n  style.families = style.family\n    .split(/,\\s?/)\n    .map((f) => f.trim().replace(/^['\"]|['\"]$/g, ''));\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/control/Control\n */\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {VOID} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      if (this.element) {\n        target.appendChild(this.element);\n      }\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered.\n * **Caution:** Attributions are rendered dynamically using `innerHTML`, which can lead to potential\n * [**XSS (Cross-Site Scripting)**](https://en.wikipedia.org/wiki/Cross-site_scripting) vulnerabilities.\n * Use this feature only for trusted content\n * or ensure that the content is properly sanitized before inserting it.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    'pointerId' in originalEvent &&\n    originalEvent.button == 0 &&\n    !(WEBKIT && MAC && originalEvent.ctrlKey)\n  );\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvent && pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvt && pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvt && pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  return (\n    'pointerId' in pointerEvent &&\n    pointerEvent.isPrimary &&\n    pointerEvent.button === 0\n  );\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {mouseActionButton} from '../events/condition.js';\nimport RenderBox from '../render/Box.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport DragBox from './DragBox.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * Mutliplier for the DOM_DELTA_LINE delta value.\n * @type {number}\n */\nconst DELTA_LINE_MULTIPLIER = 40;\n\n/**\n * Mutliplier for the DOM_DELTA_PAGE delta value.\n * @type {number}\n */\nconst DELTA_PAGE_MULTIPLIER = 300;\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../pixel.js\").Pixel}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.pixel;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta = wheelEvent.deltaY;\n\n    switch (wheelEvent.deltaMode) {\n      case WheelEvent.DOM_DELTA_LINE:\n        delta *= DELTA_LINE_MULTIPLIER;\n        break;\n      case WheelEvent.DOM_DELTA_PAGE:\n        delta *= DELTA_PAGE_MULTIPLIER;\n        break;\n      default:\n      // pass\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(\n        -delta / this.deltaPerZoom_,\n        this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      );\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(\n      view,\n      delta,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      this.duration_,\n    );\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {abstract} from '../util.js';\nimport LayerProperty from './Property.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Group\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getIntersection} from '../extent.js';\nimport {clear} from '../obj.js';\nimport {getUid} from '../util.js';\nimport BaseLayer from './Base.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {intersects} from '../extent.js';\nimport RenderEventType from '../render/EventType.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n      if (!layerState) {\n        return false;\n      }\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * This will clear the renderer so that a new one can be created next time it is needed\n   */\n  clearRenderer() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearRenderer();\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/color\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {clamp, toFixed} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\nlet colorParseContext;\n/**\n * @return {CanvasRenderingContext2D} The color parse context\n */\nfunction getColorParseContext() {\n  if (!colorParseContext) {\n    colorParseContext = createCanvasContext2D(1, 1, undefined, {\n      willReadFrequently: true,\n      desynchronized: true,\n    });\n  }\n  return colorParseContext;\n}\n\nconst rgbModernRegEx =\n  /^rgba?\\(\\s*(\\d+%?)\\s+(\\d+%?)\\s+(\\d+%?)(?:\\s*\\/\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyAbsoluteRegEx =\n  /^rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyPercentageRegEx =\n  /^rgba?\\(\\s*(\\d+%)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst hexRegEx = /^#([\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/i;\n\n/**\n * @param {string} s Color component as number or percentage.\n * @param {number} divider Divider for percentage.\n * @return {number} Color component.\n */\nfunction toColorComponent(s, divider) {\n  return s.endsWith('%')\n    ? Number(s.substring(0, s.length - 1)) / divider\n    : Number(s);\n}\n\n/**\n * @param {string} color Color string.\n */\nfunction throwInvalidColor(color) {\n  throw new Error('failed to parse \"' + color + '\" as color');\n}\n\n/**\n * @param {string} color Color string.\n * @return {Color} RGBa color array.\n */\nfunction parseRgba(color) {\n  // Fast lane for rgb(a) colors\n  if (color.toLowerCase().startsWith('rgb')) {\n    const rgb =\n      color.match(rgbLegacyAbsoluteRegEx) ||\n      color.match(rgbModernRegEx) ||\n      color.match(rgbLegacyPercentageRegEx);\n    if (rgb) {\n      const alpha = rgb[4];\n      const rgbDivider = 100 / 255;\n      return [\n        clamp((toColorComponent(rgb[1], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[2], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[3], rgbDivider) + 0.5) | 0, 0, 255),\n        alpha !== undefined ? clamp(toColorComponent(alpha, 100), 0, 1) : 1,\n      ];\n    }\n    throwInvalidColor(color);\n  }\n  // Fast lane for hex colors (also with alpha)\n  if (color.startsWith('#')) {\n    if (hexRegEx.test(color)) {\n      const hex = color.substring(1);\n      const step = hex.length <= 4 ? 1 : 2;\n      const colorFromHex = [0, 0, 0, 255];\n      for (let i = 0, ii = hex.length; i < ii; i += step) {\n        let colorComponent = parseInt(hex.substring(i, i + step), 16);\n        if (step === 1) {\n          colorComponent += colorComponent << 4;\n        }\n        colorFromHex[i / step] = colorComponent;\n      }\n      colorFromHex[3] = colorFromHex[3] / 255;\n      return colorFromHex;\n    }\n    throwInvalidColor(color);\n  }\n  // Use canvas color serialization to parse the color into hex or rgba\n  // See https://www.w3.org/TR/2021/SPSD-2dcontext-20210128/#serialization-of-a-color\n  const context = getColorParseContext();\n  context.fillStyle = '#abcdef';\n  let invalidCheckFillStyle = context.fillStyle;\n  context.fillStyle = color;\n  if (context.fillStyle === invalidCheckFillStyle) {\n    context.fillStyle = '#fedcba';\n    invalidCheckFillStyle = context.fillStyle;\n    context.fillStyle = color;\n    if (context.fillStyle === invalidCheckFillStyle) {\n      throwInvalidColor(color);\n    }\n  }\n  const colorString = context.fillStyle;\n  if (colorString.startsWith('#') || colorString.startsWith('rgba')) {\n    return parseRgba(colorString);\n  }\n  context.clearRect(0, 0, 1, 1);\n  context.fillRect(0, 0, 1, 1);\n  const colorFromImage = Array.from(context.getImageData(0, 0, 1, 1).data);\n  colorFromImage[3] = toFixed(colorFromImage[3] / 255, 3);\n  return colorFromImage;\n}\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n// The functions b1, b2, a1, a2, rgbaToLcha and lchaToRgba below are adapted from\n// https://stackoverflow.com/a/67219995/2389327\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b1(v) {\n  return v > 0.0031308 ? Math.pow(v, 1 / 2.4) * 269.025 - 14.025 : v * 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b2(v) {\n  return v > 0.2068965 ? Math.pow(v, 3) : (v - 4 / 29) * (108 / 841);\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a1(v) {\n  return v > 10.314724 ? Math.pow((v + 14.025) / 269.025, 2.4) : v / 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a2(v) {\n  return v > 0.0088564 ? Math.pow(v, 1 / 3) : v / (108 / 841) + 4 / 29;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const r = a1(color[0]);\n  const g = a1(color[1]);\n  const b = a1(color[2]);\n  const y = a2(r * 0.222488403 + g * 0.716873169 + b * 0.06060791);\n  const l = 500 * (a2(r * 0.452247074 + g * 0.399439023 + b * 0.148375274) - y);\n  const q = 200 * (y - a2(r * 0.016863605 + g * 0.117638439 + b * 0.865350722));\n  const h = Math.atan2(q, l) * (180 / Math.PI);\n  return [\n    116 * y - 16,\n    Math.sqrt(l * l + q * q),\n    h < 0 ? h + 360 : h,\n    color[3],\n  ];\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const l = (color[0] + 16) / 116;\n  const c = color[1];\n  const h = (color[2] * Math.PI) / 180;\n  const y = b2(l);\n  const x = b2(l + (c / 500) * Math.cos(h));\n  const z = b2(l - (c / 200) * Math.sin(h));\n  const r = b1(x * 3.021973625 - y * 1.617392459 - z * 0.404875592);\n  const g = b1(x * -0.943766287 + y * 1.916279586 + z * 0.027607165);\n  const b = b1(x * 0.069407491 - y * 0.22898585 + z * 1.159737864);\n  return [\n    clamp((r + 0.5) | 0, 0, 255),\n    clamp((g + 0.5) | 0, 0, 255),\n    clamp((b + 0.5) | 0, 0, 255),\n    color[3],\n  ];\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throwInvalidColor(s);\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throwInvalidColor(s);\n    }\n  }\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   * `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *   * `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *     Note that for WebGL layers, the hardcoded value `-9999999` is used to distinguish when a property is not defined.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {boolean} mapState The style uses the map state (view state or time elapsed).\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    mapState: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Time]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type {ArgValidator}\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesMapState(encoded, returnType, context) {\n  context.mapState = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  fromString,\n  lchaToRgba,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length - 1; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return lchaToRgba(lcha);\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/IconImage\n */\n\nimport {decodeFallback} from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {toString} from './color.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {fontWeights, getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\nconst genericFontFamilies = new Set([\n  'serif',\n  'sans-serif',\n  'monospace',\n  'cursive',\n  'fantasy',\n  'system-ui',\n  'ui-serif',\n  'ui-sans-serif',\n  'ui-monospace',\n  'ui-rounded',\n  'emoji',\n  'math',\n  'fangsong',\n]);\n\n/**\n * @param {string} style Css font-style\n * @param {string} weight Css font-weight\n * @param {string} family Css font-family\n * @return {string} Font key.\n */\nfunction getFontKey(style, weight, family) {\n  return `${style} ${weight} 16px \"${family}\"`;\n}\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  let timeout, fontFaceSet;\n\n  /**\n   * @param {string} fontSpec Css font spec\n   * @return {Promise<boolean>} Font with style and weight is available\n   */\n  async function isAvailable(fontSpec) {\n    await fontFaceSet.ready;\n    const fontFaces = await fontFaceSet.load(fontSpec);\n    if (fontFaces.length === 0) {\n      return false;\n    }\n    const font = getFontParameters(fontSpec);\n    const checkFamily = font.families[0].toLowerCase();\n    const checkWeight = font.weight;\n    return fontFaces.some(\n      /**\n       * @param {import('../css.js').FontParameters} f Font.\n       * @return {boolean} Font matches.\n       */\n      (f) => {\n        const family = f.family.replace(/^['\"]|['\"]$/g, '').toLowerCase();\n        const weight = fontWeights[f.weight] || f.weight;\n        return (\n          family === checkFamily &&\n          f.style === font.style &&\n          weight == checkWeight\n        );\n      },\n    );\n  }\n\n  async function check() {\n    await fontFaceSet.ready;\n    let done = true;\n    const checkedFontsProperties = checkedFonts.getProperties();\n    const fonts = Object.keys(checkedFontsProperties).filter(\n      (key) => checkedFontsProperties[key] < retries,\n    );\n    for (let i = fonts.length - 1; i >= 0; --i) {\n      const font = fonts[i];\n      let currentRetries = checkedFontsProperties[font];\n      if (currentRetries < retries) {\n        if (await isAvailable(font)) {\n          clear(textHeights);\n          checkedFonts.set(font, retries);\n        } else {\n          currentRetries += 10;\n          checkedFonts.set(font, currentRetries, true);\n          if (currentRetries < retries) {\n            done = false;\n          }\n        }\n      }\n    }\n    timeout = undefined;\n    if (!done) {\n      timeout = setTimeout(check, 100);\n    }\n  }\n\n  return async function (fontSpec) {\n    if (!fontFaceSet) {\n      fontFaceSet = WORKER_OFFSCREEN_CANVAS ? self.fonts : document.fonts;\n    }\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    let needCheck = false;\n    for (const family of families) {\n      if (genericFontFamilies.has(family)) {\n        continue;\n      }\n      const key = getFontKey(font.style, font.weight, family);\n      if (checkedFonts.get(key) !== undefined) {\n        continue;\n      }\n      checkedFonts.set(key, 0, true);\n      needCheck = true;\n    }\n    if (needCheck) {\n      clearTimeout(timeout);\n      timeout = setTimeout(check, 100);\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/Image\n */\nimport {toSize} from '../size.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\nimport IconImage from './IconImage.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport ImageStyle from './Image.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    const fillKey = this.fill_?.getKey();\n    const cacheKey =\n      `${pixelRatio},${this.angle_},${this.radius},${this.radius2_},${this.points_},${fillKey}` +\n      Object.values(this.renderOptions_).join(',');\n    let image = /** @type {HTMLCanvasElement} */ (\n      iconImageCache.get(cacheKey, null, null)?.getImage(1)\n    );\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const size = Math.ceil(renderOptions.size * pixelRatio);\n      const context = createCanvasContext2D(size, size);\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      iconImageCache.set(\n        cacheKey,\n        null,\n        null,\n        new IconImage(image, undefined, null, ImageState.LOADED, null),\n      );\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {string} Key of the fill for cache lookup.\n   */\n  getKey() {\n    const fill = this.getColor();\n    if (!fill) {\n      return '';\n    }\n    return fill instanceof CanvasPattern || fill instanceof CanvasGradient\n      ? getUid(fill)\n      : typeof fill === 'object' && 'src' in fill\n        ? fill.src + ':' + fill.offset\n        : asArray(fill).toString();\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\nimport ImageStyle from './Image.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * **declutter**: Overlapping symbols and text are decluttered.\n * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport {toSize} from '../size.js';\nimport Fill from './Fill.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/render/canvas/style\n */\n\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport RBush from 'rbush';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport Layer from './Layer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/VectorLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {import(\"../render.js\").OrderFunction|null|undefined} Render order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type {Array<import(\"../style/flat.js\").Rule>}\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {wrapX} from '../coordinate.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {inView} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport ObjectEventType from '../ObjectEventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {replaceChildren} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport {inView} from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport MapRenderer from './Map.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText,\n      map,\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/Map\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {equals} from './array.js';\nimport {assert} from './asserts.js';\nimport {warn} from './console.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport Layer from './layer/Layer.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport {hasArea} from './size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {getUid} from './util.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {PointerEvent|KeyboardEvent|WheelEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = mapBrowserEvent.originalEvent;\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    if (frameState) {\n      for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n        postRenderFunctions[i](this, frameState);\n      }\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      let keyboardEventTarget;\n      if (!this.keyboardEventTarget_) {\n        // check if map target is in shadowDOM, if yes use host element as target\n        const targetRoot = targetElement.getRootNode();\n        const targetCandidate =\n          targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n        keyboardEventTarget = targetCandidate;\n      } else {\n        keyboardEventTarget = this.keyboardEventTarget_;\n      }\n\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    if (!this.frameState_) {\n      return;\n    }\n    const layerStates = this.frameState_.layerStatesArray;\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>|null} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * {@link module:ol/control/Zoom~Zoom}\n * {@link module:ol/control/Rotate~Rotate}\n * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport Kinetic from '../Kinetic.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * {@link module:ol/interaction/DragRotate~DragRotate}\n * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * {@link module:ol/interaction/DragPan~DragPan}\n * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {abstract} from './util.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n    this.setState(TileState.EMPTY);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state === TileState.EMPTY) {\n      // no more state changes\n      return;\n    }\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/ImageTile\n */\nimport {listenImage} from './Image.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {\n  createTransformFromCoordinateTransform,\n  getTransform,\n  transform,\n} from '../proj.js';\nimport {apply as applyMatrix} from '../transform.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   * @param {import(\"../transform.js\").Transform} [sourceMatrix] Source transform matrix.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n    sourceMatrix,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = sourceMatrix\n      ? createTransformFromCoordinateTransform((input) =>\n          applyMatrix(\n            sourceMatrix,\n            transform(input, this.targetProj_, this.sourceProj_),\n          ),\n        )\n      : getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {releaseCanvas} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          this.push_(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          this.push_(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @param {...*} args Arguments to push to the instructions array.\n   * @private\n   */\n  push_(...args) {\n    const instructions = this.instructions_;\n    const index = this.zIndex + this.offset_;\n    if (!instructions[index]) {\n      instructions[index] = [];\n    }\n    instructions[index].push(...args);\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.push_(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.push_(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/Layer\n */\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  equivalent,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport LayerRenderer from '../Layer.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS transform matrix.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && equivalent(context.canvas.style.transform, transform)) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport {toSize} from '../../size.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @param {import(\"../../source/Tile.js\").default} source The tile source.\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(source, sourceKey, z, x, y) {\n  return `${getUid(source)},${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default|null}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource, tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection) {\n      this.renderedProjection = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection) {\n      this.tileCache_.clear();\n      this.renderedProjection = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedSourceRevision_) {\n      this.renderedSourceRevision_ = sourceRevision;\n    } else if (this.renderedSourceRevision_ !== sourceRevision) {\n      this.renderedSourceRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    const rotation = viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(\n        this.getLayer().getSource(),\n        staleKeys[i],\n        z,\n        x,\n        y,\n      );\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.peek(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.peek(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  maybe skip transition when not fully opaque\n     *  decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (tileState === TileState.EMPTY) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      if (tileState !== TileState.ERROR) {\n        this.renderComplete = false;\n      }\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (this.renderComplete) {\n      /**\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = (map, frameState) => {\n        const tileSourceKey = getUid(tileSource);\n        const wantedTiles = frameState.wantedTiles[tileSourceKey];\n        const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n        this.updateCacheSize(tilesCount);\n        this.tileCache_.expireCache();\n      };\n\n      frameState.postRenderFunctions.push(postRenderFunction);\n    }\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport BaseTileLayer from './BaseTile.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {toSize} from './size.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/uri\n */\n\nimport {modulo} from './math.js';\nimport {hashZXY} from './tilecoord.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\nimport {renderXYZTemplate} from './uri.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * a simple string (e.g. `'© Acme Inc.'`)\n * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {abstract, getUid} from '../util.js';\nimport Source from './Source.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    const gridProjection =\n      projection !== undefined ? projection : this.getProjection();\n    const tileGrid =\n      projection !== undefined\n        ? this.getTileGridForProjection(gridProjection)\n        : this.tileGrid || this.getTileGridForProjection(gridProjection);\n    if (this.getWrapX() && gridProjection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, gridProjection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/UrlTile\n */\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/TileImage\n */\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\nimport UrlTile from './UrlTile.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const tileCoord = [z, x, y];\n    const key = this.getKey();\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    tile.key = key;\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const key = this.getKey();\n    return this.createTile_(z, x, y, pixelRatio, projection, key);\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport TileImage from './TileImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Deprecated.  Use an ImageTile source with a loader\n * instead.  Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] Deprecated.  Use an ImageTile source and provide an array of URLs for the\n * url option instead.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport {assert} from './asserts.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport Relationship from '../../extent/Relationship.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import('../canvas.js').FillStrokeState} [state] State.\n   * @return {import('../canvas.js').FillStrokeState} State.\n   */\n  fillStyleToState(\n    fillStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {import(\"../canvas.js\").FillStrokeState} State.\n   */\n  strokeStyleToState(\n    strokeStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    this.fillStyleToState(fillStyle, state);\n    this.strokeStyleToState(strokeStyle, state);\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      state.lineDash ? this.applyPixelRatio(state.lineDash) : null,\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      this.instructions.push(createFill.call(this, state));\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      applyStroke.call(this, state);\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport {snap} from '../../geom/flat/simplify.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    this.updateFillStyle(state, this.createFill);\n    this.updateStrokeStyle(state, this.applyStroke);\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textKeepUpright_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      const backgroundFill = textState.backgroundFill\n        ? this.createFill(this.fillStyleToState(textState.backgroundFill))\n        : null;\n      const backgroundStroke = textState.backgroundStroke\n        ? this.createStroke(this.strokeStyleToState(textState.backgroundStroke))\n        : null;\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        backgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const hitDetectionBackgroundFill = backgroundFill\n        ? backgroundFill.slice(0)\n        : null;\n      if (hitDetectionBackgroundFill) {\n        hitDetectionBackgroundFill[1] = defaultFillStyle;\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        hitDetectionBackgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textKeepUpright = textStyle.getKeepUpright();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textKeepUpright_ =\n        textKeepUpright === undefined ? true : textKeepUpright;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport {containsCoordinate} from '../../extent.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @param {boolean} keepUpright Whether the text needs to be kept upright\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n  keepUpright = true,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright if the option is selected\n  let reverse = false;\n  if (keepUpright) {\n    if (rotation) {\n      const flat = [beginX, beginY, endX, endY];\n      rotate(flat, 0, 4, 2, rotation, flat, flat);\n      reverse = flat[0] > flat[2];\n    } else {\n      reverse = beginX > endX;\n    }\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport {equals} from '../../array.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\n/**\n * Converts rich text to plain text for text along lines.\n * @param {string} result The resulting plain text.\n * @param {string} part Item of the rich text array.\n * @param {number} index Index of the item in the rich text array.\n * @return {string} The resulting plain text.\n */\nfunction richTextToPlainText(result, part, index) {\n  if (index % 2 === 0) {\n    result += part;\n  }\n  return result;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      context.fillStyle = /** @type {string} */ (fillInstruction[1]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    if (!instruction[1]) {\n      return;\n    }\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFillInstruction, backgroundStrokeInstruction;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFillInstruction = /** @type {Array<*>} */ (\n              instruction[17]\n            );\n            backgroundStrokeInstruction = /** @type {Array<*>} */ (\n              instruction[18]\n            );\n          } else {\n            padding = defaultPadding;\n            backgroundFillInstruction = null;\n            backgroundStrokeInstruction = null;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              !!backgroundFillInstruction || !!backgroundStrokeInstruction,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFillInstruction,\n              backgroundStrokeInstruction,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string|Array<string>} */ (instruction[11]);\n          if (Array.isArray(text)) {\n            //FIXME Add support for rich text along lines\n            text = text.reduce(richTextToPlainText, '');\n          }\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textKeepUpright = /** @type {boolean} */ (instruction[15]);\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n              textKeepUpright,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport {ascending, descending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport Executor from './Executor.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      // Refrain from adding a 'willReadFrequently' hint in the options here.\n      // While it will remove the \"Canvas2D: Multiple readback operations using\n      // getImageData are faster with the willReadFrequently attribute set\n      // to true\" warnings in the console, it makes hitDetection extremely\n      // slow in Chrome when there are many features on the map\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /** @type {import(\"../../extent.js\").Extent|undefined} */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    /** @type {import(\"../canvas.js\").BuilderType} */\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(declutterTree ? descending : ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      const replays = this.executorsByZIndex_[zIndexKey];\n      for (let j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + ALL.indexOf(builderType);\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {toFixed} from '../../math.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport {ascending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {clamp} from '../../math.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {Icon} from '../../style.js';\nimport CanvasImmediateRenderer from './Immediate.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport RenderEventType from '../../render/EventType.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  getTolerance as getRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../render.js\").OrderFunction|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1 && this.targetContext_) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return this.container;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const declutter = this.getLayer().getDeclutter();\n    return this.replayGroup_.forEachFeatureAtCoordinate(\n      coordinate,\n      resolution,\n      rotation,\n      hitTolerance,\n      featureCallback,\n      declutter\n        ? frameState.declutter?.[declutter]?.all().map((item) => item.value)\n        : null,\n    );\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\nimport BaseVectorLayer from './BaseVector.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/featureloader\n */\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @typedef {(\n *           extent: import(\"./extent.js\").Extent,\n *           resolution: number,\n *           projection: import(\"./proj/Projection.js\").default,\n *           success?: (features: Array<FeatureType>) => void,\n *           failure?: () => void) => void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector.js\").default<FeatureType>}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      (features, dataProjection) => {\n        this.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      () => {\n        this.changed();\n        if (failure !== undefined) {\n          failure();\n        }\n      },\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {import(\"rbush\").BBox & {value: T}} Entry\n * @template T\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template {Object} T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     * @type {RBush_<Entry<T>>}\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry<T>>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry<T>} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry<T>} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {import(\"rbush\").BBox} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   * @private\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush<T>} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty} from '../obj.js';\nimport RenderFeature from '../render/Feature.js';\nimport RBush from '../structs/RBush.js';\nimport {getUid} from '../util.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureType} [feature] Feature.\n   * @param {Array<FeatureType>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureType|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureType>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<import(\"../Feature.js\").FeatureLike>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format || null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if a {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else if (!Array.isArray(indexedFeature)) {\n          this.idIndex_[id] = [indexedFeature, feature];\n        } else {\n          indexedFeature.push(feature);\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type {Array<FeatureType>} */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach((feature) => {\n          this.removeFeatureInternal(feature);\n        });\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with a {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    /** @type {Array<FeatureType>} */\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType|null} Closest feature (or `null` if none found).\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<FeatureType>|null}} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          /**\n           * @param {Array<FeatureType>} features Loaded features\n           */\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const obj = loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        return object;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    let removed = false;\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      removed = this.removeFeatureInternal(features[i]) || removed;\n    }\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const removed = this.removeFeatureInternal(feature);\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} True if the feature was removed, false if it was not found.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return false;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n\n  /**\n   * @param {boolean} overlaps The source can have overlapping geometries.\n   */\n  setOverlaps(overlaps) {\n    this.overlaps_ = overlaps;\n    this.changed();\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject from './Object.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {outerHeight, outerWidth, removeChildren} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      this.element?.remove();\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this,\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = `${pixel[0] + offset[0]}px`;\n    const y = `${pixel[1] + offset[1]}px`;\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","import \"ol/ol.css\";\r\nimport Map from \"ol/Map\";\r\nimport View from \"ol/View\";\r\nimport TileLayer from \"ol/layer/Tile\";\r\nimport XYZ from \"ol/source/XYZ\";\r\nimport OSM from \"ol/source/OSM\";\r\nimport { fromLonLat } from \"ol/proj\";\r\nimport Feature from \"ol/Feature\";\r\nimport Point from \"ol/geom/Point\";\r\nimport VectorLayer from \"ol/layer/Vector\";\r\nimport VectorSource from \"ol/source/Vector\";\r\nimport Style from \"ol/style/Style\";\r\nimport Icon from \"ol/style/Icon\";\r\nimport Overlay from \"ol/Overlay\";\r\nimport Control from \"ol/control/Control\";\r\nimport locatorImage from \"../assets/lmd-location.svg\";\r\n\r\nconst MapIntegration = (lat = 26.846695, lon = 80.946167) => {\r\n  const coordinates = fromLonLat([lon, lat]);\r\n\r\n  // #region Map Script\r\n  const marker = new Feature({\r\n    geometry: new Point(coordinates),\r\n  });\r\n\r\n  marker.setStyle(\r\n    new Style({\r\n      image: new Icon({\r\n        anchor: [0.5, 1],\r\n        src: locatorImage,\r\n      }),\r\n    })\r\n  );\r\n\r\n  // 🧭 Marker Layer\r\n  const markerLayer = new VectorLayer({\r\n    source: new VectorSource({\r\n      features: [marker],\r\n    }),\r\n  });\r\n\r\n  // 🗺️ Base Map Layer (OpenStreetMap)\r\n  const mapLayer = new TileLayer({\r\n    title: \"Map\",\r\n    type: \"base\",\r\n    visible: true,\r\n    source: new OSM(),\r\n  });\r\n\r\n  // 🛰️ Satellite Imagery (ESRI)\r\n  const satelliteLayer = new TileLayer({\r\n    title: \"Satellite\",\r\n    type: \"base\",\r\n    visible: false,\r\n    source: new XYZ({\r\n      url: \"https://services.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\r\n      attributions: \"Imagery © Esri\",\r\n    }),\r\n  });\r\n\r\n  // 🏷️ Labels Layer (ESRI)\r\n  const labelLayer = new TileLayer({\r\n    title: \"Labels\",\r\n    visible: false,\r\n    source: new XYZ({\r\n      url: \"https://services.arcgisonline.com/arcgis/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/{z}/{y}/{x}\",\r\n      attributions: \"Labels © Esri\",\r\n    }),\r\n  });\r\n\r\n  // 🗺️ Map Initialization\r\n  const map = new Map({\r\n    target: \"map-embed\",\r\n    layers: [mapLayer, satelliteLayer, labelLayer, markerLayer],\r\n    view: new View({\r\n      center: coordinates,\r\n      zoom: 14,\r\n    }),\r\n  });\r\n\r\n  // 💬 Popup Element\r\n  const popupElement = document.createElement(\"div\");\r\n  popupElement.id = \"map-popup\";\r\n  popupElement.style.cssText = `\r\n  background: white;\r\n  padding: 8px 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 6px;\r\n  min-width: 160px;\r\n  font-size: 14px;\r\n  position: relative;\r\n  bottom: 12px;\r\n`;\r\n\r\n  popupElement.innerHTML = `\r\n  <strong>Lucknow</strong><br>\r\n  <a href=\"https://www.google.com/maps?q=26.846695,80.946167\" target=\"_blank\" style=\"color: #007bff; text-decoration: none;\">\r\n    Open in Google Maps\r\n  </a>\r\n`;\r\n\r\n  document.body.appendChild(popupElement);\r\n\r\n  // 🔧 Move Zoom Buttons to Bottom Right\r\n  const zoomControlStyle = document.createElement(\"style\");\r\n  zoomControlStyle.textContent = `\r\n  .ol-zoom {\r\n    top: auto !important;\r\n    left: auto !important;\r\n    right: 8px;\r\n    bottom: 8px;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n  document.head.appendChild(zoomControlStyle);\r\n\r\n  const attributionControlStyle = document.createElement(\"style\");\r\n  attributionControlStyle.textContent = `\r\n  .ol-attribution {\r\n    bottom: 8px !important;\r\n    left: 8px !important;\r\n    right: auto !important;\r\n  }\r\n`;\r\n  document.head.appendChild(attributionControlStyle);\r\n\r\n  const popupOverlay = new Overlay({\r\n    element: popupElement,\r\n    positioning: \"bottom-center\",\r\n    stopEvent: false,\r\n    offset: [0, -35],\r\n  });\r\n  map.addOverlay(popupOverlay);\r\n\r\n  // 👆 Show Popup on Marker Click\r\n  map.on(\"click\", (event) => {\r\n    const feature = map.forEachFeatureAtPixel(event.pixel, (f) => f);\r\n    if (feature === marker) {\r\n      popupOverlay.setPosition(coordinates);\r\n      popupElement.style.display = \"block\";\r\n    } else {\r\n      popupElement.style.display = \"none\";\r\n    }\r\n  });\r\n\r\n  // 🔀 Custom Control: Satellite View Toggle\r\n  const toggleControlElement = document.createElement(\"div\");\r\n  toggleControlElement.className = \"ol-unselectable ol-control\";\r\n  toggleControlElement.style.cssText = `\r\n  background: white;\r\n  border: 1px solid #ccc;\r\n  padding: 0.25rem 0.75rem;\r\n  margin-top: 8px;\r\n  margin-left: 8px;\r\n  border-radius: 4px;\r\n  font-size: 0.85rem;\r\n  cursor: pointer;\r\n  user-select: none;\r\n`;\r\n  toggleControlElement.innerText = \"Satellite View\";\r\n\r\n  let satelliteOn = false;\r\n\r\n  toggleControlElement.addEventListener(\"click\", () => {\r\n    satelliteOn = !satelliteOn;\r\n    mapLayer.setVisible(!satelliteOn);\r\n    satelliteLayer.setVisible(satelliteOn);\r\n    labelLayer.setVisible(satelliteOn);\r\n    toggleControlElement.innerText = satelliteOn\r\n      ? \"Map View\"\r\n      : \"Satellite View\";\r\n  });\r\n\r\n  // Add Control to Map\r\n  const toggleControl = new Control({\r\n    element: toggleControlElement,\r\n  });\r\n  map.addControl(toggleControl);\r\n  // #endregion Map Script\r\n};\r\n\r\nexport default MapIntegration;\r\n","// CSS Imports\r\nimport \"./styles/default-reset.css\";\r\nimport \"./styles/styles.css\";\r\nimport \"./styles/header-styles.css\";\r\nimport \"./styles/contact-us-styles.css\";\r\nimport \"./styles/text-underline-animation.css\";\r\nimport \"./styles/why-choose-us.css\";\r\nimport \"./styles/map-styles.css\";\r\nimport \"./styles/footer.css\";\r\nimport \"./styles/util-styles.css\";\r\n// JS Imports\r\nimport \"./scripts/header\";\r\nimport \"./scripts/loader\";\r\n// import \"./scripts/map\"\r\nimport MapIntegration from \"./scripts/map\";\r\n\r\nMapIntegration(26.2837, 81.5165);\r\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","options","element","document","createElement","setAttributes","attributes","insert","css","styleElement","styleSheet","cssText","firstChild","removeChild","appendChild","createTextNode","item","content","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","concat","sourceMapping","join","addHeaderTransparency","querySelector","classList","contains","add","removeHeaderTransparency","remove","addEventListener","extendedMenu","toggle","window","scrollY","toggleExtendedNavMenu","url","String","__esModule","default","test","slice","hash","needQuotes","replace","nonce","setAttribute","stylesInDOM","getIndexByIdentifier","identifier","result","i","length","modulesToDom","list","idCountMap","identifiers","base","count","indexByIdentifier","obj","media","sourceMap","supports","layer","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","cssWithMappingToString","toString","this","map","needLayer","modules","dedupe","undefined","alreadyImportedModules","k","_k","memo","style","target","styleTarget","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","insertStyleElement","styleTagTransform","apply","parentNode","removeStyleElement","___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_URL_IMPORT_1___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","p","b","baseURI","self","href","nc","locals","constructor","disposed","dispose","disposeInternal","ascending","descending","linearFindNearest","arr","direction","candidate","reverseSubArray","begin","end","tmp","extension","Array","isArray","equals","arr1","arr2","len1","TRUE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","arguments","clear","object","property","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","listener","listeners","listenersForType","includes","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","hasListener","keys","indexOf","listen","thisArg","once","originalListener","bind","eventsKey","listenOnce","unlistenByKey","Observable","on","un","revision_","changed","EventType","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","uidCounter_","getUid","ol_uid","ObjectEvent","oldValue","values","values_","setProperties","value","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","Property","CollectionEvent","array","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","forEach","f","getArray","insertAt","elem","CollectionEventType","removeAt","prev","setAt","except","frameState","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","coordinate","getCoordinateFromPixel","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","ua","navigator","userAgent","toLowerCase","WEBKIT","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","Image","decode","PASSIVE_EVENT_LISTENERS","passive","moveTolerance","map_","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","element_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","Math","abs","clientX","clientY","assert","assertion","errorMessage","DROP","Infinity","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","state","getState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","CENTER","RESOLUTION","ROTATION","min","max","squaredSegmentDistance","x","y","x1","y1","x2","y2","dx","dy","t","angleInRadians","PI","angleInDegrees","r","decimals","factor","pow","round","floor","ceil","wrap","range","createExtent","extent","onlyCenter","smooth","center","resolution","size","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","minX","maxX","minY","maxY","ratio","log","none","boundingExtent","coordinates","extendCoordinate","buffer","dest","clone","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getHeight","getCenter","getCorner","corner","getForViewAndSize","rotation","x0","y0","x3","y3","getRotatedViewport","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","wrapAndSliceX","multiWorld","isFinite","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","worldsAway","sourceExtentWidth","easeIn","easeOut","inAndOut","linear","levels","level","warn","args","console","METERS_PER_UNIT","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","units","point","cosh","PROJECTIONS","EPSG4326Projection","cache","transforms","destination","transformFn","sourceCode","destinationCode","K0","E","E2","E3","E_P2","SQRT_E","sqrt","_E","_E2","_E3","_E4","_E5","M1","M3","M4","P2","P3","P4","P5","R","toLonLat","easting","northing","zone","mu","north","pRad","pSin","pSin2","pCos","pTan","pTan2","pTan4","epSin","epSinSqrt","c","c2","d2","d3","d4","d5","latitude","longitude","zoneToCentralLongitude","number","fromLonLat","latRad","latSin","latCos","latTan","latTan2","latTan4","lonRad","centralLonRad","a2","a3","a4","a5","a6","epsgRegExes","zoneFromCode","epsgId","re","match","parseInt","makeTransformFunction","transformer","input","output","dimension","coord","getDistance","c1","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","transformFactories","forward","inverse","projectionFactories","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","addProjection","projectionLike","makeProjection","pointResolution","projUnits","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","transformFunc","sourceTransforms","destinationTransforms","makeTransforms","intermediateCode","composeTransformFuncs","fromSource","toDestination","t1","t2","dimensions","getTransform","transform","userProjection","getUserProjection","toUserCoordinate","sourceProjection","fromUserCoordinate","destProjection","toUserResolution","projections2","forwardTransform","inverseTransform","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","mat","atan","exp","matrixPrecision","fromString","cssTransform","substring","split","parseFloat","transform2D","destinationStride","j","anchor","anchorX","anchorY","deltaX","deltaY","tmpTransform","tmpPoint","NaN","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","applyTransform","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","Number","MIN_VALUE","getClosestPoint","intersectsCoordinate","computeExtent","isNaN","returnOrUpdate","scale","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","transformed","projTransform","getStrideForLayout","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","setLayout","nesting","getLayoutForStride","startsWith","linearRing","twiceArea","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","assignClosestPoint","maxDelta","isRing","squaredDistance","deflateCoordinates","inflateCoordinates","inflateCoordinatesArray","ends","coordinatess","jj","inflateMultiCoordinatesArray","endss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","snap","quantize","quantizeArray","simplifiedEnds","LinearRing","maxDelta_","maxDeltaRevision_","deflateCoordinate","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","intersectsLineString","coordinatesExtent","ret","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","linearRingIsClockwise","edge","orientLinearRings","right","isClockwise","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","arrayMaxSquaredDelta","assignClosestArrayPoint","getOrientedFlatCoordinates","linearRings","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRingsAreOriented","intersectsLinearRingArray","deflateCoordinatesArray","fromExtent","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","cappedMaxRes","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","position","rotX","rotY","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","properties","ViewProperty","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","createSnapToResolutions","defaultMaxResolution","degrees","defaultMinResolution","defaultMaxZoom","power","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","theta","createSnapToN","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","w","h","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","geometry","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","fontWeights","normal","bold","getFontParameters","fontSpec","lineHeight","weight","variant","trim","families","family","width","height","canvasPool","settings","canvas","shift","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","offsetWidth","getComputedStyle","marginLeft","marginRight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","replaceChild","removeChildren","node","lastChild","pointerEvents","target_","listenerKeys","render","setTarget","getMap","setMap","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","attributions_","attributions","className","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","layers","getAllLayers","visibleAttributions","Set","flatMap","getAttributions","some","getSource","getAttributionsCollapsible","setCollapsible","from","updateElement_","display","Promise","all","attribution","toPromise","err","reject","resolve","promiseGetter","visible","innerHTML","handleToggle_","getCollapsible","setCollapsed","getCollapsed","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","view","getView","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","currentZoom","newZoom","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","getAngle","zoomByDelta","setActive","getActive","mapBrowserEvent","active","delta_","stopEvent","browserEvent","shiftKey","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","targetElement","getTargetElement","rootNode","ShadowRoot","host","hasAttribute","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroid","distance","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","lastAngle_","getSize","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","getGeometry","DragBoxEventType","DragBoxEvent","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","out_","out","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","pan","platformModifierKey","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","timeLeft","handleWheelZoom_","setMouseAnchor","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","background_","background","opacity","zIndex","className_","state_","getBackground","getClassName","getLayerState","managed","getZIndex","getOpacity","getVisible","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","GroupEvent","LayerGroup","Base","baseOptions","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","layerState","inView","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","getFeatures","getData","isVisible","getMapInternal","layerStatesArray","getLayerGroup","find","layerExtent","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","handlePrecompose_","renderEvent","arrayLayerState","createRenderer","hasRenderer","clearRenderer","quickselect","compare","defaultCompare","s","sd","swap","maxEntries","_maxEntries","_minEntries","_all","search","bbox","toBBox","nodesToSearch","children","child","childBBox","leaf","collides","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minEnlargement","bboxArea","enlargement","enlargedArea","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","destNode","mid","NO_COLOR","colorParseContext","rgbModernRegEx","rgbLegacyAbsoluteRegEx","rgbLegacyPercentageRegEx","hexRegEx","toColorComponent","divider","endsWith","throwInvalidColor","color","parseRgba","rgb","alpha","rgbDivider","hex","step","colorFromHex","colorComponent","willReadFrequently","desynchronized","fillStyle","invalidCheckFillStyle","colorString","fillRect","colorFromImage","getImageData","cacheSize","withAlpha","b1","v","b2","a1","rgbaToLcha","l","q","asArray","hasArea","toSize","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","isType","expected","LiteralExpression","isSpecific","CallExpression","operator","newParsingContext","variables","featureId","geometryType","mapState","parse","encoded","expectedType","returnType","parser","parsers","parseCallExpression","Ops","createCallExpressionParser","hasArgsCount","withGetArgs","name","withNoArgs","withArgsOfType","usesMapState","withArgsOfReturnType","hasEvenArgs","argsCount","inputType","fallback","message","interpolationType","interpolation","stop","operation","argCount","needleType","haystack","arg","colors","parsedColors","minArgs","maxArgs","expression","argType","validators","parsed","computeGeometryType","getGeometries","buildExpression","compileExpression","colorValue","compileAssertionExpression","hasOwn","compileAccessorExpression","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lchaToRgba","getCacheKey","crossOrigin","shared","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","getPattern","pattern","getImageState","ready","then","createPattern","getImage","setSize","maxCacheSize","taintedTestContext","IconImage","image","imageState","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","initializeImage_","isTainted_","drawImage","dispatchChangeEvent_","handleImageError_","handleImageLoad_","pixelRatio","replaceColor_","getPixelRatio","getHitDetectionImage","getSrc","HTMLImageElement","catch","handleLoad","unlisten","handleError","ctx","globalCompositeOperation","onChange","cacheKey","asColorLike","canvasPattern","patternCanvasContext","asCanvasPattern","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","genericFontFamilies","getFontKey","registerFont","retries","fontFaceSet","async","isAvailable","fontFaces","font","checkFamily","checkWeight","check","done","checkedFontsProperties","fonts","currentRetries","needCheck","has","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","body","text","measureTextWidth","measureAndCacheTextWidth","reduce","curr","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImageSize","getOrigin","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","RegularShape","hitDetectionCanvas_","fill_","fill","origin_","points","radius2_","radius2","stroke_","stroke","renderOptions_","loading","getFill","getPoints","getRadius","getRadius2","getStroke","setFill","createHitDetectionCanvas_","fillKey","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","angle0","radiusC","lineTo","closePath","setRadius","patternImage_","setColor","patternImage","CanvasPattern","CanvasGradient","calculateScale","wantedWidth","wantedHeight","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","setGeometry","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","feature","defaultStyles","createDefaultStyle","Circle","Text","font_","keepUpright_","keepUpright","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getKeepUpright","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setKeepUpright","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styles","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","getId","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluateKeepUpright","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","icon","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","setRenderOrder","renderOrder","styleLike","toStyleLike","styleFunction","setDeclutter","inversePixelTransform","expireIconCache","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","scheduleExpireIconCache","postRenderFunctions","Map","fontChangeListenerKey_","redrawText","container","insertBefore","children_","BaseVector","renderedLayerStates","previousElement","layerIndex","sourceState","oldChildren","childNodes","oldChild","newChild","replaceChildren","removeLayerMapProperty","setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","MapProperty","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotateOptions","attributionOptions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","handleMapBrowserEvent","currentDoc","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","time","unobserve","Composite","targetRoot","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","getClientRects","oldSize","tileCoord","transition_","transition","transitionStarts_","interpolate","release","setState","getTileCoord","getAlpha","inTransition","endTransition","asImageLike","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","disposedError","defaultSize","loader_","loader","data_","error_","controller_","controller","imageData","getError","error","abort","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","getBlankImage","naturalWidth","naturalHeight","loadHandler","errorHandler","listening","decoding","loaded","listenImage","TileRange","containsTileRange","tileRange","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","save","clip","restore","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceMatrix","sourceProj_","targetProj_","transformInvCache","transformInv","coordTransform","pointLength","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","sourceTileGrid","targetTileGrid","wrappedTileCoord","gutter","getTileFunction","renderEdges","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","clipExtent_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","sources","clipExtent","getTileSize","triangulation","drawSingle","imageSmoothingEnabled","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","steps","ud","vd","leftToLoad","sourceListenKey","unlistenSources_","highWaterMark","count_","entries_","oldest_","newest_","deleteOldest","entry","expireCache","keep","containsKey","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","instructions_","context_","Proxy","push_","pushMethodArgs_","instructions","pushFunction","draw","instructionsAtIndex","instructionAtIndex","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","maxStaleKeys","getStaleKeys","prependStaleKey","unshift","getLayer","renderIfReadyAndVisible","loadImage","pixelContext","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","cssTransform1","cssTransform2","mat1","mat2","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","prepareContainer","canvasTransform","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","sourceKey","getKeyZXY","addTileToLookup","tilesByZ","existing","removeTileFromLookup","delete","getRenderExtent","gridExtent","getTileGridForProjection","tileLayer","extentChanged","renderComplete","renderedExtent_","renderedPixelRatio","renderedProjection","renderedTiles","renderedSourceKey_","renderedSourceRevision_","tempExtent","tempTileRange_","tempTileCoord_","tileCache_","getTileCache","getOrCreateTile","tileCache","tileSource","getTile","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","tileSize","getGutterForProjection","sourceRevision","enqueueTiles","initialZ","preload","minZ","zDirection","viewport","tileCoordIntersectsViewport","tileQueueKey","getTileCoordCenter","findStaleTile_","staleKeys","findAltTiles_","altZ","getTileRangeForTileCoordAndZ","covered","viewResolution","viewCenter","frameExtent","canvasExtent","getPreload","targetZ","renderExtent","uid","tileState","parentZ","canvasScale","getInterpolate","zs","currentClip","clips","clipZs","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","xIndex","nextX","yIndex","nextY","contextSaved","drawTile","updateUsedTiles","postRenderFunction","tilesCount","updateCacheSize","tileCount","getTileImage","alphaChanged","globalAlpha","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getCacheSize","TileProperty","getUseInterimTilesOnError","BaseTile","tmpTileCoord","every","currentVal","res","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tileCoordExtent","getTileCoordChildTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","getForProjection","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","half","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplate","template","renderXYZTemplate","adaptAttributions","attributionLike","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","TileSourceEvent","tilePixelRatio_","tmpSize","tileOptions","setKey","getTileGrid","getTileCoordForTileUrlFunction","gridProjection","withinExtentAndZ","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","exec","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","expandUrl","templates","tileUrlFunctions","createFromTileUrlFunctions","createFromTemplates","defaultTileLoadFunction","imageTile","tileClass","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","xyzOptions","gridOptions","createXYZ","geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","handleGeometryChange_","createStyleFunction","setId","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleToState","fillStyleColor","fillPatternScale","strokeStyleToState","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","drawFlatCoordinatess_","numEnds","myBegin","moveToLineToInstruction","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","filteredFlatCoordinates","sharedData","drawFlatCoordinates_","lastStroke","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textKeepUpright_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg","saveTextStates_","p0","p1","p2","p3","hitDetectionBackgroundFill","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textKeepUpright","textRotation","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","lineStringLength","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","richTextToPlainText","part","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","getZIndexContext","createLabel","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","getTextDimensions","renderWidth","contextInstructions","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","box","strokePadding","labelOrImage","executeLabelInstructions","drawImageOrLabel","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","backgroundFillInstruction","backgroundStrokeInstruction","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","execute","executeHitDetection","ALL","DECLUTTER","NON_DECLUTTER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","idx","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","userTransform","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","setTransform","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","textReplay","lineStringReplay","polygonReplay","hasImage","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loadingPromises","renderGeometry","renderFeatureInternal","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","clipped_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","renderedFrameDeclutter_","replayGroup_","replayGroupChanged","clipping","targetContext_","renderWorlds","executorGroup","declutterable","vectorSource","endWorld","world","setDrawContext_","resetDrawContext_","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","lastIndexOf","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","loadExtent","loadFeatures","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","xhr","format","success","failure","XMLHttpRequest","open","responseType","withCredentials","status","responseText","responseXML","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","interpolatePoint","cumulativeLengths","needle","comparator","cmp","low","high","found","binarySearch","RenderFeature","type_","flatCoordinates_","flatInteriorPoints_","flatMidpoints_","properties_","stride_","simplifiedGeometry_","startOrientation","prevEndIndex","orientation","getInteriorPointsOfMultiArray","midpoint","enableSimplifyTransformed","douglasPeuckerArray","rbush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","rbush","VectorSourceEvent","format_","url_","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removeFeatures","removed","featureChangeKeys","idString","setLoader","setOverlaps","insertFirst","autoPan","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","MapIntegration","lat","lon","marker","Feature","Point","locatorImage","markerLayer","VectorLayer","VectorSource","mapLayer","TileLayer","OSM","satelliteLayer","XYZ","labelLayer","View","popupElement","zoomControlStyle","attributionControlStyle","popupOverlay","Overlay","toggleControlElement","innerText","satelliteOn","toggleControl","Control"],"sourceRoot":""}